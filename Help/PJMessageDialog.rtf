{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057
{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss \fcharset0 Arial;}{\f2\fmodern Courier New;}{\f3\fmodern \fcharset0 Courier New;}{\f4\fnil \fcharset0 Arial;}{\f5\fnil \fcharset2 WingDings;}{\f6\fnil \fcharset0 Courier New;}}
{\colortbl\red0\green0\blue0;\red0\green128\blue0;\red0\green0\blue255;\red128\green0\blue0;\red128\green0\blue128;}
#{\footnote {#}IDH_UNIT}
${\footnote {$}PJMessageDialog unit}
K{\footnote {K}PJMessageDialog;PJMessageDialog unit}
A{\footnote {A}PJMessageDialog}
@{\footnote {@}Describes unit containing components}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f1\fs22\cf2\b PJMessageDialog unit\plain\f0\fs22\cf0 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 This unit contains a set of components that implement message boxes. There are three components that can be installed on the component palette, one of which is provided for backwards compatibility with release 1 of this unit. In addition there and two supporting abstract base class components.
\par \plain\f1\fs12\cf0 
\par \plain\f1\fs18\cf0\b "Published" components\plain\f1\fs18\cf0 
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 These components will appear on the component palette when the unit is installed.
\par \plain\f1\fs8\cf0 
\par \pard \fi-2000 \li2000 \tx2000 \plain\f1\fs18\cf0 {\strike TPJWinMsgDlg}{\v IDH_WMD_CLASS}\tab This component wraps the Windows {\strike MessageBoxIndirect}{\v !AL(MessageBoxIndirect)} API call and displays a message box based on that provided by Windows. This component will be suitable for most purposes and has the lighter footprint.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 {\strike TPJVCLMsgDlg}{\v IDH_VMD_CLASS}\tab This component uses the Delphi VCL CreateMessageDialog function to create a form based message box. (CreateMessageDialog is used by the standard Delphi MessageDlgXXX functions). The component provides more flexibility than either the Delphi functions or TPJWinMsgDlg. It should be used when it is necessary to display buttons or combinations of buttons that are not supported by the Windows API message box or when a finer degree of control over the appearance and behaviour of the message box is required. TPJVCLMsgDlg supports all the features of TPJWinMsgDlg and extends them.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 {\strike TPJMessageDialog}{\v IDH_MD_CLASS}\tab This is an updated version of the component supplied in release 1 of this unit. Various bugs have been fixed and the handling of user icons improved. This component is only provided for backwards compatibility with existing projects that use the old version. It exposes the same properties as the old component. Some of these properties vary from those common to TPJWinMsgDlg andTPJVCLMsgDlg. It is recommended that TPJWinMsgDlg or TPJVCLMsgDlg are used in new projects.
\par \pard \plain\f1\fs12\cf0 
\par \plain\f1\fs18\cf0\b Abstract base classes\plain\f1\fs18\cf0 
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 The following abstract base classes for the components are provided:
\par \pard \fi-2000 \li2000 \tx2000 \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 {\strike TPJMsgDlgBase}{\v IDH_BASE_CLASS}\tab This is the base class for all the components in the unit. It provides common functionality and has some abstract methods to be implemented by descendant components. TPJVCLMsgDlg and TPJWinMsgDlgCustom descend from this class.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 {\strike TPJWinMsgDlgCustom}{\v IDH_WMDC_CLASS}\tab This class forms the base for the two components that wrap the MessageBoxIndirect API call. TPJWinMsgDlg simply publishes all the properties of this component while TPJMessageDialog maps the properties of the old component onto the new underlying code.\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_BASE_CLASS}
${\footnote {$}TPJMsgDlgBase}
K{\footnote {K}TPJMsgDlgBase}
A{\footnote {A}TPJMsgDlgBase;TPJMsgDlgBase_object}
@{\footnote {@}Description of base class for all message box components.}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJMsgDlgBase\plain\f0\fs22\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\ul Heirachy}{\v IDH_BASE_HEIRACHY}          {\ul Properties}{\v IDH_BASE_PROPERTIES}          {\ul Methods}{\v IDH_BASE_METHODS}\plain\f1\fs18\cf0           {\ul Events}{\v IDH_BASE_EVENTS}\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard TPJMsgDlgBase\plain\f1\fs18\cf0  is the abstract base class for all the message box components contained in the PJMessageDialog unit.\plain\f0\fs18\cf0 
\par 
\par \plain\f0\fs18\cf0\b Unit\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 {\strike PJMessageDialog}{\v IDH_UNIT}
\par 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 This abstract class is the base class for all the message dialog components implemented in the PJMessageDialog unit. It provides common functionality and defines some abstract methods to be overridden by descendant classes. \plain\f0\fs18\cf0 Th\plain\f1\fs18\cf0 e\plain\f0\fs18\cf0  component\plain\f1\fs18\cf0 s that descend from this class\plain\f0\fs18\cf0  provide customisable message dialog box\plain\f1\fs18\cf0 es that wrap either the \plain\f0\fs18\cf0 Windows MessageBoxIndirect API \plain\f1\fs18\cf0 function or the Delphi CreateMessageDialog function\plain\f0\fs18\cf0 .
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 The class implements some protected {\ul properties}{\v IDH_BASE_PROPERTIES} that can be exposed by sub classes.\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_BASE_HEIRACHY}
${\footnote {$}TPJMsgDlgBase heirachy}
@{\footnote {@}Class heirachy for message box base class}

\pard \plain \plain\f0\fs18\cf0\b Heirachy\plain\f0\fs18\cf0 
\par 
\par {\strike TObject}{\v !AL(TObject_object,1)}
\par     |
\par {\strike TPersistent}{\v !AL(TPersistent_object,1)}
\par     |
\par {\strike TComponent}{\v !AL(TComponent_object,1)}\plain\f0\fs20\cf0 
\par \page 
#{\footnote {#}IDH_BASE_PROPERTIES}
${\footnote {$}TPJMsgDlgBase properties}
@{\footnote {@}List of properties of message box base class}

\pard \plain \plain\f0\fs18\cf0\b Properties\plain\f0\fs18\cf0 
\par 
\par \pard \tx200 \tab {\strike ButtonGroup}{\v IDH_BASE_BUTTONGROUP}\plain\f1\fs18\cf0  *\plain\f0\fs18\cf0 
\par \tab {\strike HelpContext}{\v IDH_BASE_HELPCONTEXT}\plain\f1\fs18\cf0  *\plain\f0\fs18\cf0 
\par \plain\f1\fs18\cf0 \tab {\strike HelpFile}{\v IDH_BASE_HELPFILE} *\plain\f0\fs18\cf0 
\par \tab {\strike IconResource}{\v IDH_BASE_ICONRESOURCE}\plain\f1\fs18\cf0  *\plain\f0\fs18\cf0 
\par \plain\f1\fs18\cf0 \tab {\strike Kind}{\v IDH_BASE_KIND} *\plain\f0\fs18\cf0 
\par \tab {\strike MakeSound}{\v IDH_BASE_MAKESOUND}\plain\f1\fs18\cf0  *\plain\f0\fs18\cf0 
\par \tab {\strike Name}{\v !AL(TComponent_Name,1)}
\par \tab {\strike Tag}{\v !AL(TComponent_Tag,1)}
\par \tab {\strike Text}{\v IDH_BASE_TEXT}\plain\f1\fs18\cf0  *\plain\f0\fs18\cf0 
\par \tab {\strike Title}{\v IDH_BASE_TITLE}\plain\f1\fs18\cf0  *
\par \plain\f1\fs8\cf0 
\par \pard \plain\f1\fs18\cf0 All the properties introduced by TPJMsgDlgBase (marked * ) are protected.\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_BASE_BUTTONGROUP}
${\footnote {$}TPJMsgDlgBase.ButtonGroup}
K{\footnote {K}TPJMsgDlgBase,ButtonGroup;ButtonGroup,TPJMsgDlgBase;ButtonGroup}
A{\footnote {A}TPJMsgDlgBase_ButtonGroup;ButtonGroup_property;ButtonGroup}
@{\footnote {@}Description of base class's ButtonGroup property}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJMsgDlgBase.ButtonGroup
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJMsgDlgBase}{\v IDH_BASE_CLASS}          {\strike See also}{\v !AL(TPJMsgDlgBase_HelpContext;TPJMsgDlgBase_Execute)}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Determines which buttons appear in the dialog box.
\par 
\par \pard \fi-200 \li200 \plain\f2\fs18\cf0\b type\plain\f2\fs18\cf0  TPJMsgDlgButtonGroup = (bgAbortRetryIgnore, bgOK,\plain\f3\fs18\cf0  \plain\f2\fs18\cf0 bgOKCancel, bgRetryCancel, bgYesNo, bgYesNoCancel\plain\f3\fs18\cf0 , bgUnknown, bgCancelTryContinue\plain\f2\fs18\cf0 );
\par \pard \plain\f2\fs8\cf0 
\par \pard \keep \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  ButtonGroup: TPJMsgDlgButtonGroup;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 The buttons which appear in the dialog box depend on the value of this property. The possibilities are:
\par \plain\f0\fs8\cf0 
\par \pard \fi-2400 \li2400 \tx2400 \plain\f0\fs18\cf0\b Value\plain\f0\fs18\cf0 \tab \plain\f0\fs18\cf0\b Buttons used\plain\f0\fs18\cf0 
\par \pard \fi-1800 \li1800 \tx1800 \brdrt \brdrs \plain\f0\fs8\cf0  
\par \pard \fi-2400 \li2400 \tx2400 \plain\f0\fs18\cf0\i bgAbortRetryIgnore\plain\f1\fs18\cf0 \tab \plain\f0\fs18\cf0 Abort, Retry and Ignore buttons\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \pard \fi-1800 \li1800 \tx3000 \plain\f0\fs8\cf0 
\par \pard \fi-2400 \li2400 \tx2400 \plain\f0\fs18\cf0\i bgOK\plain\f0\fs18\cf0 \tab A single OK button (default value)\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i bgOKCancel\plain\f0\fs18\cf0 \tab An OK and a Cancel button\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i bgRetryCancel\plain\f0\fs18\cf0 \tab A Retry and a Cancel button\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i bgYesNo\plain\f0\fs18\cf0 \tab A Yes and a No button\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i bgYesNoCancel\plain\f0\fs18\cf0 \tab Yes, No and Cancel buttons.
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i bg\plain\f1\fs18\cf0\i Unknown\plain\f0\fs18\cf0 \tab An unsupported or unknown group of buttons\plain\f1\fs18\cf0 .
\par \plain\f1\fs8\cf0 
\par \plain\f0\fs18\cf0\i bgCancelTryContinue\plain\f1\fs18\cf0 \tab Cancel, Try Again and Continue buttons if supported, otherwise equivalent to \plain\f0\fs18\cf0\i bgAbortRetryIgnore\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \pard \fi-1800 \li1800 \tx1800 \brdrb \brdrs \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_BASE_HELPCONTEXT}
${\footnote {$}TPJMsgDlgBase.HelpContext}
K{\footnote {K}TPJMsgDlgBase,HelpContext;HelpContext,TPJMsgDlgBase;HelpContext}
A{\footnote {A}TPJMsgDlgBase_HelpContext;HelpContext_property;HelpContext}
@{\footnote {@}Description of base class's HelpContext property.}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJMsgDlgBase\plain\f1\fs22\cf2\b .\plain\f0\fs22\cf2\b HelpContext
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJMsgDlgBase}{\v IDH_BASE_CLASS}\plain\f1\fs18\cf0           {\ul See also}{\v !AL(TPJMsgDlgBase_HelpFile;TPJMsgDlgBase_OnHelp)}\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Specifies the context number for online Help.
\par 
\par \pard \keep \plain\f2\fs18\cf0\b type \plain\f2\fs18\cf0 THelpContext = -MaxLongInt..MaxLongInt;
\par \plain\f2\fs8\cf0\b 
\par \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  HelpContext: THelpContext;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Set the HelpContext property to the help context nunber of the relevant topic in the help file\plain\f1\fs18\cf0  determined by the {\strike HelpFile}{\v IDH_BASE_HELPFILE} property\plain\f0\fs18\cf0 .\plain\f1\fs18\cf0  The help file must contain a topic with the given help context.\plain\f0\fs18\cf0 
\par \plain\f0\fs20\cf0 
\par \page 
#{\footnote {#}IDH_BASE_HELPFILE}
${\footnote {$}TPJMsgDlgBase.HelpFile}
K{\footnote {K}TPJMsgDlgBase,HelpFile;HelpFile,TPJMsgDlgBase;HelpFile}
A{\footnote {A}TPJMsgDlgBase_HelpFile;HelpFile_property;HelpFile}
@{\footnote {@}Description of base class's HelpFile property.}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJMsgDlgBase.HelpFile
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJMsgDlgBase}{\v IDH_BASE_CLASS}\plain\f1\fs18\cf0           {\strike See also}{\v !AL(TPJMsgDlgBase_HelpContext;TPJMsgDlgBase_OnHelp)}\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Specifies the \plain\f1\fs18\cf0 file to use for online\plain\f0\fs18\cf0  Help.
\par 
\par \pard \keep \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  HelpFile: \plain\f3\fs18\cf0\b string\plain\f2\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Set the HelpFile\plain\f1\fs18\cf0  \plain\f0\fs18\cf0 property to \plain\f1\fs18\cf0 specify the help file to be used when a Help button is clicked or F1 is pressed in the dialog. If HelpFile is set to the empty string then any help file associated with the parent form or application is used.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 The {\strike HelpContext}{\v IDH_BASE_HELPCONTEXT} property is used to specify the help topic to be displayed. Therefore the specified help file should contain a topic with the appropriate context number.\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0\b Note\plain\f1\fs18\cf0 : this property is not made public by {\strike TPJMessageDialog}{\v IDH_MD_CLASS} which relies on the help file of the owning form.\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_BASE_ICONRESOURCE}
${\footnote {$}TPJMsgDlgBase.IconResource}
K{\footnote {K}TPJMsgDlgBase,IconResource;IconResource,TPJMsgDlgBase;IconResource}
A{\footnote {A}TPJMsgDlgBase_IconResource;IconResource_property;IconResource}
@{\footnote {@}Description of base class's IconResource property}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJMsgDlgBase.IconResource
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJMsgDlgBase}{\v IDH_BASE_CLASS}          {\strike See also}{\v !AL(TPJMsgDlgBase_Kind)}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Specifies the resource containing the dialog box's icon.
\par 
\par \pard \keep \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  IconResource: \plain\f2\fs18\cf0\b string\plain\f2\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Set IconResource to identify the resource to be used to display a user defined icon in the dialog box. \plain\f1\fs18\cf0 If IconResource is left blank then the default resource name "MAINICON"* is used. \plain\f0\fs18\cf0 The icon resource must be contained in the executable file. If the \plain\f1\fs18\cf0 such a\plain\f0\fs18\cf0  resource cannot be found then no icon is displayed\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 The \plain\f0\fs18\cf0 {\strike Kind}{\v IDH_BASE_KIND} \plain\f1\fs18\cf0 property \plain\f0\fs18\cf0 must be set to \plain\f0\fs18\cf0\i m\plain\f1\fs18\cf0\i k\plain\f0\fs18\cf0\i User\plain\f0\fs18\cf0  to display a user defined icon. IconResource is ignored if IconKind has any other value.
\par \plain\f0\fs8\cf0 
\par \pard \fi-800 \li800 \tx800 \plain\f1\fs18\cf0\b Note 1:\plain\f1\fs18\cf0  *\tab MAINICON is the resource name of the application's main icon in Delphi.
\par \plain\f1\fs18\cf0\b Note 2:\plain\f1\fs18\cf0 \tab To reference an icon resource with a numeric id (rather than a string name) preceed the numeric value by a '#' character.\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_BASE_KIND}
${\footnote {$}TPJMsgDlgBase.Kind}
K{\footnote {K}TPJMsgDlgBase,Kind;Kind,TPJMsgDlgBase;Kind}
A{\footnote {A}TPJMsgDlgBase_Kind;Kind_property;Kind}
@{\footnote {@}Description of base class's Kind property}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJMsgDlgBase.Kind
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJMsgDlgBase}{\v IDH_BASE_CLASS}          {\strike See also}{\v !AL(TPJMsgDlgBase_Title;TPJMsgDlgBase_IconResource;TPJMsgDlgBase_MakeSound)}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Determines the \plain\f1\fs18\cf0 attributes of the \plain\f0\fs18\cf0 dialog box\plain\f1\fs18\cf0  that is displayed.\plain\f0\fs18\cf0 
\par 
\par \pard \fi-200 \li200 \plain\f2\fs18\cf0\b type\plain\f2\fs18\cf0  TPJMsgDlgKind= (m\plain\f3\fs18\cf0 k\plain\f2\fs18\cf0 Warning, m\plain\f3\fs18\cf0 k\plain\f2\fs18\cf0 Information, m\plain\f3\fs18\cf0 k\plain\f2\fs18\cf0 Query, m\plain\f3\fs18\cf0 k\plain\f2\fs18\cf0 Error, m\plain\f3\fs18\cf0 k\plain\f2\fs18\cf0 User\plain\f3\fs18\cf0 , mkApplication, mkWinLogo\plain\f2\fs18\cf0 );
\par \pard \plain\f2\fs8\cf0 
\par \pard \keep \plain\f2\fs18\cf0\b property \plain\f2\fs18\cf0 Kind: TPJMsgDlgKind;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Set this property to \plain\f1\fs18\cf0 determine the appearance and other attributes of the dialog box.\plain\f0\fs18\cf0  \plain\f1\fs18\cf0 The property specifies the \plain\f0\fs18\cf0 icon \plain\f1\fs18\cf0 that \plain\f0\fs18\cf0 will appear in the dialog box\plain\f1\fs18\cf0 , the default window title and any sound played when the dialog box appears.\plain\f0\fs18\cf0  The default window title can be overridden using the {\strike Title}{\v IDH_BASE_TITLE} property and sounds are only played when {\strike MakeSound}{\v IDH_BASE_MAKESOUND} is True.
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 The effect of each of the possible\plain\f1\fs18\cf0  values of the Kind property\plain\f0\fs18\cf0  are described below:
\par \plain\f0\fs8\cf0 
\par \pard \fi-3200 \li3200 \tx1600 \tx3200 \tx4800 \keep \plain\f0\fs18\cf0\b Value\tab Icon\tab Default title\tab System Sound\plain\f0\fs18\cf0 
\par \pard \fi-3200 \li3200 \tx1600 \tx3200 \tx4800 \keep \brdrt \brdrs \plain\f0\fs8\cf0  
\par \pard \fi-3200 \li3200 \tx1600 \tx3200 \tx4800 \keep \plain\f0\fs18\cf0\i m\plain\f1\fs18\cf0\i k\plain\f0\fs18\cf0\i Warning\plain\f0\fs18\cf0 \tab \{bmct IDIExclamation.bmp\}\tab "Warning"\tab MB_ICONEXCLAMATION
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i m\plain\f1\fs18\cf0\i k\plain\f0\fs18\cf0\i Information\plain\f0\fs18\cf0 \tab \{bmct IDIAsterisk.bmp\}\tab "Information"\tab MB_ICONASTERISK
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i m\plain\f1\fs18\cf0\i k\plain\f0\fs18\cf0\i Query\plain\f0\fs18\cf0 \tab \{bmct IDIQuestion.bmp\}\tab "Confirm"\tab MB_ICONQUESTION
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i m\plain\f1\fs18\cf0\i k\plain\f0\fs18\cf0\i Error\plain\f0\fs18\cf0 \tab \{bmct IDIHand.bmp\}\tab "Error"\tab MB_ICONHAND
\par \plain\f0\fs26\cf0 
\par \plain\f0\fs18\cf0\i m\plain\f1\fs18\cf0\i k\plain\f0\fs18\cf0\i User\plain\f0\fs18\cf0 \tab IconResource *\tab Application.Title **\tab MB_OK
\par \plain\f0\fs26\cf0 
\par \plain\f0\fs18\cf0\i mkApplication\plain\f0\fs18\cf0 \tab \{bmct IDIApplication.bmp\}\tab Application.Title **\tab MB_OK
\par \plain\f0\fs26\cf0 
\par \plain\f0\fs18\cf0\i mkWinLogo\plain\f0\fs18\cf0 \tab \{bmct IDIWinLogo.bmp\}\tab Application.Title **\tab MB_OK
\par 
\par \pard \fi-3200 \li3200 \tx1600 \tx3200 \tx4800 \keep \brdrb \brdrs \plain\f0\fs8\cf0  
\par \pard \fi-300 \li300 \tx300 \plain\f0\fs18\cf0 *\tab Icon is loaded from the resource specified by the {\strike IconResource}{\v IDH_BASE_ICONRESOURCE} property.
\par **\tab The default title is set to the same value as the {\strike Application}{\v !AL(TApplication_object,1)} object's {\strike Title}{\v !AL(TApplication_Title,1)} property.
\par \pard \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 The default value of the property is\plain\f0\fs18\cf0  \plain\f0\fs18\cf0\i m\plain\f1\fs18\cf0\i k\plain\f0\fs18\cf0\i Information\plain\f0\fs18\cf0 .
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0\b Note\plain\f1\fs18\cf0 : {\strike TPJMessageDialog}{\v IDH_MD_CLASS} does not make this property public. It instead uses the more restrictive {\strike IconKind}{\v IDH_MD_ICONKIND} property. Internally IconKind maps to associated values of the protected Kind property.\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_BASE_MAKESOUND}
${\footnote {$}TPJMsgDlgBase.MakeSound}
K{\footnote {K}TPJMsgDlgBase,MakeSound;MakeSound,TPJMsgDlgBase;MakeSound}
A{\footnote {A}TPJMsgDlgBase_MakeSound;MakeSound_property;MakeSound}
@{\footnote {@}Description of base class's MakeSound property}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJMsgDlgBase.MakeSound
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJMsgDlgBase}{\v IDH_BASE_CLASS}          {\strike See also}{\v !AL(TPJMsgDlgBase_Kind)}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Flag that determines if a sound will be emitted when the dialog box is display\plain\f1\fs18\cf0 ed\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  MakeSound: Boolean;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Set MakeSound to true to play a sound when the dialog appears. If MakeSound is false then no sound is played.
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 The sound played is one of the standard system sounds. Which sound is used depends on the value of the {\strike Kind}{\v IDH_BASE_KIND} property.
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 The property's default value is \plain\f1\fs18\cf0\i False\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_BASE_TEXT}
${\footnote {$}TPJMsgDlgBase.Text}
K{\footnote {K}TPJMsgDlgBase,Text;Text,TPJMsgDlgBase;Text}
A{\footnote {A}TPJMsgDlgBase_Text;Text_property;Text}
@{\footnote {@}Description of base class's Text property.}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJMsgDlgBase.Text
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJMsgDlgBase}{\v IDH_BASE_CLASS}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard The text that is displayed in the dialog box.
\par 
\par \pard \keep \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  Text: \plain\f2\fs18\cf0\b string\plain\f2\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Set this property to the text that you wish to display in the body on the dialog box. The default is to display nothing.
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0\b Note:\plain\f1\fs18\cf0  Line breaks in the dialog box can be forced by including CR LF pairs in the Text string. This can't be done at design time using the standard Delphi string property editor. However an {\strike Extended String Property Editor}{\v IDH_EXTSTRPROPED} can be installed to enable multiple lines of text to be assigned at design time.\plain\f0\fs20\cf0 
\par \page 
#{\footnote {#}IDH_BASE_TITLE}
${\footnote {$}TPJMsgDlgBase.Title}
K{\footnote {K}TPJMsgDlgBase,Title;Title,TPJMsgDlgBase;Title}
A{\footnote {A}TPJMsgDlgBase_Title;Title_property;Title}
@{\footnote {@}Description of bases class's Title property}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJMsgDlgBase.Title
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJMsgDlgBase}{\v IDH_BASE_CLASS}          {\strike See also}{\v !AL(TPJMsgDlgBase_Kind)}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard The dialog box's window title.
\par 
\par \pard \keep \plain\f2\fs18\cf0\b type\plain\f2\fs18\cf0  TCaption = \plain\f2\fs18\cf0\b type string\plain\f2\fs18\cf0 ;
\par \plain\f2\fs8\cf0 
\par \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  Title: TCaption;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Set this property to the string that should be displayed as the dialog box window title. Leaving this property \plain\f1\fs18\cf0 empty\plain\f0\fs18\cf0  causes a default title to be displayed, which depends on the value of the {\strike Kind}{\v IDH_BASE_KIND} property.
\par \plain\f0\fs20\cf0 
\par \page 
#{\footnote {#}IDH_BASE_METHODS}
${\footnote {$}TPJMsgDlgBase methods}
@{\footnote {@}List of methods implemented by the base class}

\pard \plain \plain\f0\fs18\cf0\b Methods\plain\f0\fs18\cf0 
\par \pard \tx400 
\par \tab {\strike Execute}{\v IDH_BASE_EXECUTE}
\par 
\par \pard \tx200 TPJMsgDlgBase\plain\f1\fs18\cf0  \plain\f0\fs18\cf0 also inherits methods from {\strike TComponent}{\v !AL(TComponent_object,1)}.
\par \page 
#{\footnote {#}IDH_BASE_EXECUTE}
${\footnote {$}TPJMsgDlgBase.Execute}
K{\footnote {K}TPJMsgDlgBase,Execute;Execute,TPJMsgDlgBase;Execute}
A{\footnote {A}TPJMsgDlgBase_Execute;Execute_property;Execute}
@{\footnote {@}Generic description of base class's Execute method}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJMsgDlgBase.Execute
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJMsgDlgBase}{\v IDH_BASE_CLASS}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Displays the dialog box\plain\f1\fs18\cf0  and returns information about the button pressed to close it\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f2\fs18\cf0\b function\plain\f2\fs18\cf0  Execute: Integer;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Call Execute to display the dialog box. Execute returns a value associated with the button that was clicked to close the dialog box\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_BASE_EVENTS}
${\footnote {$}TPJMsgDlgBase events}
@{\footnote {@}List of events implemented by the base class}

\pard \plain \plain\f1\fs18\cf0\b Events\plain\f0\fs18\cf0 
\par \pard \tx400 
\par \tab {\strike OnHelp}{\v IDH_BASE_ONHELP}
\par 
\par \page 
#{\footnote {#}IDH_BASE_ONHELP}
${\footnote {$}TPJMsgDlgBase.OnHelp}
K{\footnote {K}TPJMsgDlgBase,OnHelp;OnHelp,TPJMsgDlgBase;OnHelp}
A{\footnote {A}TPJMsgDlgBase_OnHelp;OnHelp_event;OnHelp}
@{\footnote {@}Generic description of base class's OnHelp event}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJMsgDlgBase.\plain\f1\fs22\cf2\b OnHelp\plain\f0\fs22\cf2\b 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJMsgDlgBase}{\v IDH_BASE_CLASS}\plain\f1\fs18\cf0           {\strike See also}{\v !AL(TPJMsgDlgBase_HelpContext;TPJMsgDlgBase_HelpFile)}\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Event triggered when a user requests help in a dialog box\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f3\fs18\cf0\b property\plain\f2\fs18\cf0  \plain\f3\fs18\cf0 OnHelp\plain\f2\fs18\cf0 : {\strike TNotifyEvent}{\v !AL(TNotifyEvent,1)};
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 The OnHelp event is triggered when the user requests help in a dialog either by clicking a help button or by pressing F1. If OnHelp is handled then the component's default help processing is inhibited - the event handler must display the required help.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 This event is never triggered if the dialog box does not display a help button. F1 keypresses are ignored if there is no Help Button.\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_WMDC_CLASS}
${\footnote {$}TPJWinMsgDlgCustom}
K{\footnote {K}TPJWinMsgDlgCustom}
A{\footnote {A}TPJWinMsgDlgCustom;TPJWinMsgDlgCustom_object}
@{\footnote {@}Decription of the TPJWinMsgDlgCustom component class}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJWinMsgDlgCustom\plain\f0\fs22\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\ul Heirachy}{\v IDH_WMDC_HEIRACHY}          {\ul Properties}{\v IDH_WMDC_PROPERTIES}          {\ul Methods}{\v IDH_WMDC_METHODS}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard TPJWinMsgDlgCustom\plain\f1\fs18\cf0  provides a base class for the components that\plain\f0\fs18\cf0  encapsulate a Windows message box dialog\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par 
\par \plain\f0\fs18\cf0\b Unit\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 {\strike PJMessageDialog}{\v IDH_UNIT}
\par 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 TPJWinMsgDlgCustom\plain\f1\fs18\cf0  the common functionality for the two components that encapsulate \plain\f0\fs18\cf0 a customisable Windows message dialog box\plain\f1\fs18\cf0  - i.e. {\strike TPJWinMsgDlg}{\v IDH_WMD_CLASS} (recommended) and the old {\strike TPJMessageDialog}{\v IDH_MD_CLASS} (provided for backward compatibility)\plain\f0\fs18\cf0 . The component wraps the Windows MessageBoxIndirect API call.
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 The component adds no properties to those protected properties declared in {\strike TPJMsgBoxBase}{\v IDH_BASE_CLASS} and the properties remain protected.\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_WMDC_HEIRACHY}
${\footnote {$}TPJWinMsgDlgCustom heirachy}
@{\footnote {@}Class heirachy for TPJWinMsgDlgCustom component}

\pard \plain \plain\f0\fs18\cf0\b Heirachy\plain\f0\fs18\cf0 
\par 
\par {\strike TObject}{\v !AL(TObject_object,1)}
\par     |
\par {\strike TPersistent}{\v !AL(TPersistent_object,1)}
\par     |
\par {\strike TComponent}{\v !AL(TComponent_object,1)}\plain\f0\fs20\cf0 
\par \plain\f0\fs18\cf0     |
\par \plain\f1\fs18\cf0 {\strike TPJMsgDlgBase}{\v IDH_BASE_CLASS}\plain\f1\fs20\cf0 
\par \page 
#{\footnote {#}IDH_WMDC_PROPERTIES}
${\footnote {$}TPJWinMsgDlgCustom properties}
@{\footnote {@}List of properties of TPJWinMsgDlgCustom}

\pard \plain \plain\f0\fs18\cf0\b Properties\plain\f0\fs18\cf0 
\par 
\par \pard \tx200 \tab {\strike ButtonGroup}{\v IDH_BASE_BUTTONGROUP}\plain\f1\fs18\cf0  *\plain\f0\fs18\cf0 
\par \tab {\strike HelpContext}{\v IDH_BASE_HELPCONTEXT}\plain\f1\fs18\cf0  *\plain\f0\fs18\cf0 
\par \plain\f1\fs18\cf0 \tab {\strike HelpFile}{\v IDH_BASE_HELPFILE} *\plain\f0\fs18\cf0 
\par \tab {\strike IconResource}{\v IDH_BASE_ICONRESOURCE}\plain\f1\fs18\cf0  *\plain\f0\fs18\cf0 
\par \plain\f1\fs18\cf0 \tab {\strike Kind}{\v IDH_BASE_KIND} *\plain\f0\fs18\cf0 
\par \tab {\strike MakeSound}{\v IDH_BASE_MAKESOUND}\plain\f1\fs18\cf0  *\plain\f0\fs18\cf0 
\par \tab {\strike Name}{\v !AL(TComponent_Name,1)}
\par \tab {\strike Tag}{\v !AL(TComponent_Tag,1)}
\par \tab {\strike Text}{\v IDH_BASE_TEXT}\plain\f1\fs18\cf0  *\plain\f0\fs18\cf0 
\par \tab {\strike Title}{\v IDH_BASE_TITLE}\plain\f1\fs18\cf0  *\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 All properties marked * are inherited from {\strike TPJMsgDlgBase}{\v IDH_BASE_CLASS} and are protected.\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_WMDC_METHODS}
${\footnote {$}TPJWinMsgDlgCustom methods}
@{\footnote {@}List of methods implemented by TPJWinMsgDlgCustom}

\pard \plain \plain\f0\fs18\cf0\b Methods\plain\f0\fs18\cf0 
\par \pard \tx400 
\par \tab {\strike Execute}{\v IDH_BASE_EXECUTE}
\par 
\par \pard \tx200 TPJWinMsgDlgCustom\plain\f1\fs18\cf0  \plain\f0\fs18\cf0 also inherits methods from {\strike TComponent}{\v !AL(TComponent_object,1)}.
\par \page 
#{\footnote {#}IDH_WMD_CLASS}
${\footnote {$}TPJWinMsgDlg}
K{\footnote {K}TPJWinMsgDlg}
A{\footnote {A}TPJWinMsgDlg;TPJWinMsgDlg_object}
@{\footnote {@}Description of the TPJWinMsgDlg component}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \{bmlt TPJWinMsgDlg.bmp\}\plain\f0\fs22\cf2\b  TPJWinMsgDlg\plain\f0\fs22\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\ul Heirachy}{\v IDH_WMD_HEIRACHY}          {\ul Properties}{\v IDH_WMD_PROPERTIES}          {\ul Methods}{\v IDH_WMD_METHODS}\plain\f1\fs18\cf0           {\ul Events}{\v IDH_WMD_EVENTS}\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard TPJWinMsgDlg\plain\f1\fs18\cf0  \plain\f0\fs18\cf0 encapsulates a Windows message box dialog\plain\f1\fs18\cf0 , providing a finer level of control than the similar TPJMessageDialog.\plain\f0\fs18\cf0 
\par 
\par \plain\f0\fs18\cf0\b Unit\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 {\strike PJMessageDialog}{\v IDH_UNIT}
\par 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 TPJWinMsgDlg provides a customisable Windows message dialog box. The component wraps the Windows MessageBoxIndirect API call.\plain\f1\fs18\cf0  It is similar to {\strike TPJMessageDialog}{\v IDH_MD_CLASS} but provides greater control over the dialog, while its properties are a subset of those of {\strike TPJVCLMsgDlg}{\v IDH_VMD_CLASS}. TPJWinMsgDlg is recommended for new projects requiring a Windows message box. If even greater control over the appearance of the dialog is required use TPJVCLMsgDlg.\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 The text displayed in the dialog box is determined by the {\strike Text}{\v IDH_WMD_TEXT} property. Various button groupings can be displayed using the {\strike ButtonGroup}{\v IDH_WMD_BUTTONGROUP} property. Setting a non-zero {\strike HelpContext}{\v IDH_WMD_HELPCONTEXT} causes a help button to be displayed. The {\strike Kind}{\v IDH_WMD_KIND} property allows a choice of various standard windows icons to be displayed. A user defined icon extracted from a named resource, specified by {\strike IconResource}{\v IDH_WMD_ICONRESOURCE} can also be displayed. The window title can be set using the {\strike Title}{\v IDH_WMD_TITLE} property, otherwise a default title, related to the kind of icon being displayed is used. The {\strike MakeSound}{\v IDH_WMD_MAKESOUND} property determines whether an appropriate system sound is generated when the dialog is displayed.
\par \page 
#{\footnote {#}IDH_WMD_HEIRACHY}
${\footnote {$}TPJWinMsgDlg heirachy}
@{\footnote {@}Class heirachy for TPJWinMsgDlg component}

\pard \plain \plain\f0\fs18\cf0\b Heirachy\plain\f0\fs18\cf0 
\par 
\par {\strike TObject}{\v !AL(TObject_object,1)}
\par     |
\par {\strike TPersistent}{\v !AL(TPersistent_object,1)}
\par     |
\par {\strike TComponent}{\v !AL(TComponent_object,1)}\plain\f0\fs20\cf0 
\par \plain\f0\fs18\cf0     |
\par \plain\f1\fs18\cf0 {\strike TPJMsgDlgBase}{\v IDH_BASE_CLASS}
\par \plain\f0\fs18\cf0     |
\par \plain\f1\fs18\cf0 {\strike TPJWinMsgDlgCustom}{\v IDH_WMDC_CLASS}\plain\f1\fs20\cf0 
\par \page 
#{\footnote {#}IDH_WMD_PROPERTIES}
${\footnote {$}TPJWinMsgDlg properties}
@{\footnote {@}List of properties of TPJWinMsgDlg}

\pard \plain \plain\f0\fs18\cf0\b Properties\plain\f0\fs18\cf0 
\par 
\par \pard \tx200 \tab {\strike ButtonGroup}{\v IDH_WMD_BUTTONGROUP}
\par \tab {\strike HelpContext}{\v IDH_WMD_HELPCONTEXT}
\par \plain\f1\fs18\cf0 \tab {\strike HelpFile}{\v IDH_WMD_HELPFILE}\plain\f0\fs18\cf0 
\par \tab {\strike IconResource}{\v IDH_WMD_ICONRESOURCE}
\par \plain\f1\fs18\cf0 \tab {\strike Kind}{\v IDH_WMD_KIND}\plain\f0\fs18\cf0 
\par \tab {\strike MakeSound}{\v IDH_WMD_MAKESOUND}
\par \tab {\strike Name}{\v !AL(TComponent_Name,1)}
\par \tab {\strike Tag}{\v !AL(TComponent_Tag,1)}
\par \tab {\strike Text}{\v IDH_WMD_TEXT}
\par \tab {\strike Title}{\v IDH_WMD_TITLE}
\par \page 
#{\footnote {#}IDH_WMD_BUTTONGROUP}
${\footnote {$}TPJWinMsgDlg.ButtonGroup}
K{\footnote {K}TPJWinMsgDlg,ButtonGroup;ButtonGroup,TPJWinMsgDlg;ButtonGroup}
A{\footnote {A}TPJWinMsgDlg_ButtonGroup;ButtonGroup_property;ButtonGroup}
@{\footnote {@}Description of the ButtonGroup property from the perspective of TPJWinMsgDlg}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJWinMsgDlg.ButtonGroup
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJWinMsgDlg}{\v IDH_WMD_CLASS}          {\strike See also}{\v !AL(TPJWinMsgDlg_HelpContext;TPJWinMsgDlg_Execute)}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Determines which buttons appear in the dialog box.
\par 
\par \pard \fi-200 \li200 \plain\f2\fs18\cf0\b type\plain\f2\fs18\cf0  TPJMsgDlgButtonGroup = (bgAbortRetryIgnore, bgOK, bgOKCancel, bgRetryCancel, bgYesNo, bgYesNoCancel\plain\f3\fs18\cf0 , bgUnknown, bgCancelTryContinue\plain\f2\fs18\cf0 );
\par \pard \plain\f2\fs8\cf0 
\par \pard \keep \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  ButtonGroup: TPJMsgDlgButtonGroup;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 The buttons which appear in the dialog box depend on the value of this property. The possibilities are:
\par \plain\f0\fs8\cf0 
\par \pard \fi-2400 \li2400 \tx2400 \plain\f0\fs18\cf0\b Value\plain\f0\fs18\cf0 \tab \plain\f0\fs18\cf0\b Buttons used\plain\f0\fs18\cf0 
\par \pard \fi-1800 \li1800 \tx1800 \brdrt \brdrs \plain\f0\fs8\cf0  
\par \pard \fi-2400 \li2400 \tx2400 \plain\f0\fs18\cf0\i bgAbortRetryIgnore\plain\f0\fs18\cf0 \tab Abort, Retry and Ignore buttons\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i bgOK\plain\f0\fs18\cf0 \tab A single OK button (default value)\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i bgOKCancel\plain\f0\fs18\cf0 \tab An OK and a Cancel button\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i bgRetryCancel\plain\f0\fs18\cf0 \tab A Retry and a Cancel button\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i bgYesNo\plain\f0\fs18\cf0 \tab A Yes and a No button\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i bgYesNoCancel\plain\f0\fs18\cf0 \tab Yes, No and Cancel buttons.
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i bg\plain\f1\fs18\cf0\i Unknown\plain\f0\fs18\cf0 \tab An unsupported or unknown group of buttons\plain\f1\fs18\cf0 . This item is for use in {\strike TPJVCLMsgDlg}{\v IDH_VMD_CLASS} and should not be selected in TPJWinMsgDlg. If it is selected it has the same effect as \plain\f1\fs18\cf0\i bgOK\plain\f1\fs18\cf0 .
\par \plain\f1\fs8\cf0 
\par \plain\f0\fs18\cf0\i bgCancelTryContinue\plain\f1\fs18\cf0 \tab Cancel, Try Again and Continue buttons. This button group requires the Windows NT platform and Windows 2000 or later. Behaves as \plain\f1\fs18\cf0\i bgAbortRetryIgnore \plain\f1\fs18\cf0 when specified on OSs that do not support this button group. \plain\f0\fs18\cf0 
\par \pard \fi-1800 \li1800 \tx1800 \brdrb \brdrs \plain\f0\fs8\cf0  
\par \pard 
\par \plain\f0\fs18\cf0 To include a help button in the dialog box, set the {\strike HelpContext}{\v IDH_WMD_HELPCONTEXT} property to some non-zero value.
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 A value associated with the button that was clicked is returned from the {\strike Execute}{\v IDH_WMD_EXECUTE} method depends on which button was clicked.
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 The default value of the property is \plain\f1\fs18\cf0\i bgOK\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_WMD_HELPCONTEXT}
${\footnote {$}TPJWinMsgDlg.HelpContext}
K{\footnote {K}TPJWinMsgDlg,HelpContext;HelpContext,TPJWinMsgDlg;HelpContext}
A{\footnote {A}TPJWinMsgDlg_HelpContext;HelpContext_property;HelpContext}
@{\footnote {@}Description of the inherited HelpContext property from the perspective of TPJWinMsgDlg}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJWinMsgDlg.HelpContext
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJWinMsgDlg}{\v IDH_WMD_CLASS}\plain\f1\fs18\cf0           {\strike See also}{\v !AL(TPJWinMsgDlg_HelpFile;TPJWinMsgDlg_OnHelp)}\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Specifies the context number for online Help and displays a help button.
\par 
\par \pard \keep \plain\f2\fs18\cf0\b type \plain\f2\fs18\cf0 THelpContext = -MaxLongInt..MaxLongInt;
\par \plain\f2\fs8\cf0\b 
\par \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  HelpContext: THelpContext;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Set the HelpContext property to the help context nunber of the relevant topic in the help file\plain\f1\fs18\cf0  determined by the {\strike HelpFile}{\v IDH_WMD_HELPFILE} property\plain\f0\fs18\cf0 . When a non-zero help context number is specified a Help button is displayed in the dialog box which calls context sensitive help with the given help context\plain\f1\fs18\cf0  when pressed\plain\f0\fs18\cf0 .
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0\b Note:\plain\f1\fs18\cf0  the help file must contain a topic with a matching context number.\plain\f0\fs18\cf0 
\par \plain\f0\fs20\cf0 
\par \page 
#{\footnote {#}IDH_WMD_HELPFILE}
${\footnote {$}TPJWinMsgDlg.HelpFile}
K{\footnote {K}TPJWinMsgDlg,HelpFile;HelpFile,TPJWinMsgDlg;HelpFile}
A{\footnote {A}TPJWinMsgDlg_HelpFile;HelpFile_property;HelpFile}
@{\footnote {@}Description of the inherited HelpFile property from the perspective of TPJWinMsgDlg}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJWinMsgDlg.HelpFile
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJWinMsgDlg}{\v IDH_WMD_CLASS}\plain\f1\fs18\cf0           {\strike See also}{\v !AL(TPJWinMsgDlg_HelpContext;TPJWinMsgDlg_OnHelp)}\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Specifies the \plain\f1\fs18\cf0 file to use for online\plain\f0\fs18\cf0  Help.
\par 
\par \pard \keep \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  HelpFile: \plain\f3\fs18\cf0\b string\plain\f2\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Set the HelpFile\plain\f1\fs18\cf0  \plain\f0\fs18\cf0 property to \plain\f1\fs18\cf0 specify the help file to be used when a Help button is clicked or F1 is pressed in the dialog. If HelpFile is set to the empty string then the help file associated with the parent form or application is used.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 The {\strike HelpContext}{\v IDH_WMD_HELPCONTEXT} property is used to specify the help topic to be displayed. Therefore the specified help file should contain a topic with the appropriate context number.\plain\f0\fs18\cf0 
\par \plain\f0\fs20\cf0 
\par \page 
#{\footnote {#}IDH_WMD_ICONRESOURCE}
${\footnote {$}TPJWinMsgDlg.IconResource}
K{\footnote {K}TPJWinMsgDlg,IconResource;IconResource,TPJWinMsgDlg;IconResource}
A{\footnote {A}TPJWinMsgDlg_IconResource;IconResource_property;IconResource}
@{\footnote {@}Description of the inherited IconResource property from the perspective of TPJWinMsgDlg}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJWinMsgDlg.IconResource
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJWinMsgDlg}{\v IDH_WMD_CLASS}          {\strike See also}{\v !AL(TPJWinMsgDlg_Kind)}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Specifies the resource containing the dialog box's icon.
\par 
\par \pard \keep \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  IconResource: \plain\f2\fs18\cf0\b string\plain\f2\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Set IconResource to identify the resource to be used to display a user defined icon in the dialog box. \plain\f1\fs18\cf0 If IconResource is left blank then the default resource name "MAINICON"* is used. \plain\f0\fs18\cf0 The icon resource must be contained in the executable file. If the \plain\f1\fs18\cf0 such a\plain\f0\fs18\cf0  resource cannot be found then no icon is displayed\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 The \plain\f0\fs18\cf0 {\strike Kind}{\v IDH_WMD_KIND} \plain\f1\fs18\cf0 property \plain\f0\fs18\cf0 must be set to \plain\f0\fs18\cf0\i m\plain\f1\fs18\cf0\i k\plain\f0\fs18\cf0\i User\plain\f0\fs18\cf0  to display a user defined icon. IconResource is ignored if Kind has any other value.
\par \plain\f0\fs8\cf0 
\par \pard \fi-800 \li800 \tx800 \plain\f1\fs18\cf0\b Note 1:\plain\f1\fs18\cf0  *\tab MAINICON is the resource name of the application's main icon in Delphi.
\par \plain\f1\fs18\cf0\b Note 2:\plain\f1\fs18\cf0 \tab To reference an icon resource with a numeric id (rather than a string name) preceed the numeric value by a '#' character.\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_WMD_KIND}
${\footnote {$}TPJWinMsgDlg.Kind}
K{\footnote {K}TPJWinMsgDlg,Kind;Kind,TPJWinMsgDlg;Kind}
A{\footnote {A}TPJWinMsgDlg_Kind;Kind_property;Kind}
@{\footnote {@}Description of the inherited Kind property from the perspective of TPJWinMsgDlg}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJWinMsgDlg.Kind
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJWinMsgDlg}{\v IDH_WMD_CLASS}          {\strike See also}{\v !AL(TPJWinMsgDlg_Title;TPJWinMsgDlg_IconResource;TPJWinMsgDlg_MakeSound)}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Determines the \plain\f1\fs18\cf0 attributes of the \plain\f0\fs18\cf0 dialog box\plain\f1\fs18\cf0  that is displayed.\plain\f0\fs18\cf0 
\par 
\par \pard \fi-200 \li200 \plain\f2\fs18\cf0\b type\plain\f2\fs18\cf0  TPJMsgDlgKind= (m\plain\f3\fs18\cf0 k\plain\f2\fs18\cf0 Warning, m\plain\f3\fs18\cf0 k\plain\f2\fs18\cf0 Information, m\plain\f3\fs18\cf0 k\plain\f2\fs18\cf0 Query, m\plain\f3\fs18\cf0 k\plain\f2\fs18\cf0 Error, m\plain\f3\fs18\cf0 k\plain\f2\fs18\cf0 User\plain\f3\fs18\cf0 , mkApplication, mkWinLogo\plain\f2\fs18\cf0 );
\par \pard \plain\f2\fs8\cf0 
\par \pard \keep \plain\f2\fs18\cf0\b property \plain\f2\fs18\cf0 Kind: TPJMsgDlgKind;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Set this property to \plain\f1\fs18\cf0 determine the appearance and other attributes of the dialog box.\plain\f0\fs18\cf0  \plain\f1\fs18\cf0 The property specifies the \plain\f0\fs18\cf0 icon \plain\f1\fs18\cf0 that \plain\f0\fs18\cf0 will appear in the dialog box\plain\f1\fs18\cf0 , the default window title and any sound played when the dialog box appears.\plain\f0\fs18\cf0  The default window title can be overridden using the {\strike Title}{\v IDH_WMD_TITLE} property and sounds are only played when {\strike MakeSound}{\v IDH_WMD_MAKESOUND} is True.
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 The effect of each of the possible\plain\f1\fs18\cf0  values of the Kind property\plain\f0\fs18\cf0  are described below:
\par \plain\f0\fs8\cf0 
\par \pard \fi-3200 \li3200 \tx1600 \tx3200 \tx4800 \keep \plain\f0\fs18\cf0\b Value\tab Icon\tab Default title\tab System Sound\plain\f0\fs18\cf0 
\par \pard \fi-3200 \li3200 \tx1600 \tx3200 \tx4800 \keep \brdrt \brdrs \plain\f0\fs8\cf0  
\par \pard \fi-3200 \li3200 \tx1600 \tx3200 \tx4800 \keep \plain\f0\fs18\cf0\i m\plain\f1\fs18\cf0\i k\plain\f0\fs18\cf0\i Warning\plain\f0\fs18\cf0 \tab \{bmct IDIExclamation.bmp\}\tab "Warning"\tab MB_ICONEXCLAMATION
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i m\plain\f1\fs18\cf0\i k\plain\f0\fs18\cf0\i Information\plain\f0\fs18\cf0 \tab \{bmct IDIAsterisk.bmp\}\tab "Information"\tab MB_ICONASTERISK
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i m\plain\f1\fs18\cf0\i k\plain\f0\fs18\cf0\i Query\plain\f0\fs18\cf0 \tab \{bmct IDIQuestion.bmp\}\tab "Confirm"\tab MB_ICONQUESTION
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i m\plain\f1\fs18\cf0\i k\plain\f0\fs18\cf0\i Error\plain\f0\fs18\cf0 \tab \{bmct IDIHand.bmp\}\tab "Error"\tab MB_ICONHAND
\par \plain\f0\fs26\cf0 
\par \plain\f0\fs18\cf0\i m\plain\f1\fs18\cf0\i k\plain\f0\fs18\cf0\i User\plain\f0\fs18\cf0 \tab IconResource *\tab Application.Title **\tab MB_OK
\par \plain\f0\fs26\cf0 
\par \plain\f0\fs18\cf0\i mkApplication\plain\f0\fs18\cf0 \tab \{bmct IDIApplication.bmp\}\tab Application.Title **\tab MB_OK
\par \plain\f0\fs26\cf0 
\par \plain\f0\fs18\cf0\i mkWinLogo\plain\f0\fs18\cf0 \tab \{bmct IDIWinLogo.bmp\}\tab Application.Title **\tab MB_OK
\par 
\par \pard \fi-3200 \li3200 \tx1600 \tx3200 \tx4800 \keep \brdrb \brdrs \plain\f0\fs8\cf0  
\par \pard \fi-300 \li300 \tx300 \plain\f0\fs18\cf0 *\tab Icon is loaded from the resource specified by the {\strike IconResource}{\v IDH_WMD_ICONRESOURCE} property.
\par **\tab The default title is set to the same value as the {\strike Application}{\v !AL(TApplication_object,1)} object's {\strike Title}{\v !AL(TApplication_Title,1)} property.
\par \pard \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 The default value of the property is\plain\f0\fs18\cf0  \plain\f0\fs18\cf0\i m\plain\f1\fs18\cf0\i k\plain\f0\fs18\cf0\i Information\plain\f0\fs18\cf0 .
\par \page 
#{\footnote {#}IDH_WMD_MAKESOUND}
${\footnote {$}TPJWinMsgDlg.MakeSound}
K{\footnote {K}TPJWinMsgDlg,MakeSound;MakeSound,TPJWinMsgDlg;MakeSound}
A{\footnote {A}TPJWinMsgDlg_MakeSound;MakeSound_property;MakeSound}
@{\footnote {@}Description of the inherited MakeSound property from the perspective of TPJWinMsgDlg}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJWinMsgDlg.MakeSound
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJWinMsgDlg}{\v IDH_WMD_CLASS}          {\strike See also}{\v !AL(TPJWinMsgDlg_Kind)}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Flag that determines if a sound will be emitted when the dialog box is display\plain\f1\fs18\cf0 ed\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  MakeSound: Boolean;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Set MakeSound to true to play a sound when the dialog appears. If MakeSound is false then no sound is played.
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 The sound played is one of the standard system sounds. Which sound is used depends on the value of the {\strike Kind}{\v IDH_WMD_KIND} property.
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 The property's default value is \plain\f1\fs18\cf0\i False\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_WMD_TEXT}
${\footnote {$}TPJWinMsgDlg.Text}
K{\footnote {K}TPJWinMsgDlg,Text;Text,TPJWinMsgDlg;Text}
A{\footnote {A}TPJWinMsgDlg_Text;Text_property;Text}
@{\footnote {@}Description of the inherited Text property from the perspective of TPJWinMsgDlg}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJWinMsgDlg.Text
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJWinMsgDlg}{\v IDH_WMD_CLASS}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard The text that is displayed in the dialog box.
\par 
\par \pard \keep \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  Text: \plain\f2\fs18\cf0\b string\plain\f2\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Set this property to the text that you wish to display in the body on the dialog box. The default is to display nothing.
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0\b Note:\plain\f1\fs18\cf0  Line breaks in the dialog box can be forced by including CR LF pairs in the Text string. This can't be done at design time using the standard Delphi string property editor. However an {\strike Extended String Property Editor}{\v IDH_EXTSTRPROPED} can be installed to enable multiple lines of text to be assigned at design time.\plain\f0\fs20\cf0 
\par \page 
#{\footnote {#}IDH_WMD_TITLE}
${\footnote {$}TPJWinMsgDlg.Title}
K{\footnote {K}TPJWinMsgDlg,Title;Title,TPJWinMsgDlg;Title}
A{\footnote {A}TPJWinMsgDlg_Title;Title_property;Title}
@{\footnote {@}Description of the inherited Title property from the perspective of TPJWinMsgDlg}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJWinMsgDlg.Title
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJWinMsgDlg}{\v IDH_WMD_CLASS}          {\strike See also}{\v !AL(TPJWinMsgDlg_Kind)}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard The dialog box's window title.
\par 
\par \pard \keep \plain\f2\fs18\cf0\b type\plain\f2\fs18\cf0  TCaption = \plain\f2\fs18\cf0\b type string\plain\f2\fs18\cf0 ;
\par \plain\f2\fs8\cf0 
\par \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  Title: TCaption;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Set this property to the string that should be displayed as the dialog box window title. Leaving this property \plain\f1\fs18\cf0 empty\plain\f0\fs18\cf0  causes a default title to be displayed, which depends on the value of the {\strike Kind}{\v IDH_WMD_KIND} property.
\par \plain\f0\fs20\cf0 
\par \page 
#{\footnote {#}IDH_WMD_METHODS}
${\footnote {$}TPJWinMsgDlg methods}
@{\footnote {@}List of methods implemented by TPJWinMsgDlg}

\pard \plain \plain\f0\fs18\cf0\b Methods\plain\f0\fs18\cf0 
\par \pard \tx400 
\par \tab {\strike Execute}{\v IDH_WMD_EXECUTE}
\par 
\par \pard \tx200 TPJWinMsgDlg\plain\f1\fs18\cf0  \plain\f0\fs18\cf0 also inherits methods from {\strike TComponent}{\v !AL(TComponent_object,1)}.
\par \page 
#{\footnote {#}IDH_WMD_EXECUTE}
${\footnote {$}TPJWinMsgDlg.Execute}
K{\footnote {K}TPJWinMsgDlg,Execute;Execute,TPJWinMsgDlg;Execute}
A{\footnote {A}TPJWinMsgDlg_Execute;Execute_property;Execute}
@{\footnote {@}Description of the inherited Execute method from perspective of TPJWinMsgDlg}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJWinMsgDlg.Execute
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJWinMsgDlg}{\v IDH_WMD_CLASS}          {\strike See also}{\v !AL(TPJWinMsgDlg_ButtonGroup)}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Displays the dialog box\plain\f1\fs18\cf0  and returns information about the button pressed to close it\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f2\fs18\cf0\b function\plain\f2\fs18\cf0  Execute: Integer;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Call Execute to display the dialog box. Execute returns a value associated with the button that was clicked to close the dialog box as follows:
\par \plain\f0\fs8\cf0 
\par \pard \fi-1600 \li1600 \tx1600 \plain\f0\fs18\cf0\b Button clicked\tab Return value\plain\f0\fs18\cf0 
\par \pard \fi-1600 \li1600 \tx1600 \brdrt \brdrs \plain\f0\fs8\cf0  
\par \pard \fi-1600 \li1600 \tx1600 \plain\f0\fs18\cf0 Abort\tab \plain\f0\fs18\cf0\i IDABORT\plain\f1\fs18\cf0\i  (3)\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Cancel\tab \plain\f0\fs18\cf0\i IDCANCEL\plain\f1\fs18\cf0\i  (2)\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 Continue\plain\f0\fs18\cf0 \tab \plain\f0\fs18\cf0\i ID\plain\f1\fs18\cf0\i CONTINUE (11)\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Ignore\tab \plain\f0\fs18\cf0\i IDIGNORE\plain\f1\fs18\cf0\i  (5)\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 No\tab \plain\f0\fs18\cf0\i IDNO\plain\f1\fs18\cf0\i  (7)\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 OK\tab \plain\f0\fs18\cf0\i IDO\plain\f1\fs18\cf0\i K (1)\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Retry\tab \plain\f0\fs18\cf0\i IDRETR\plain\f1\fs18\cf0\i Y (4)
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 Try Again\plain\f0\fs18\cf0 \tab \plain\f0\fs18\cf0\i ID\plain\f1\fs18\cf0\i TRYAGAIN (10)\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Yes\tab \plain\f0\fs18\cf0\i IDYES\plain\f1\fs18\cf0\i  (6)\plain\f0\fs18\cf0 
\par \pard \fi-1600 \li1600 \tx1600 \brdrb \brdrs \plain\f0\fs8\cf0  
\par \pard \fi-1600 \li1600 \tx1600 
\par \pard \plain\f0\fs18\cf0 Use the {\strike ButtonGroup}{\v IDH_WMD_BUTTONGROUP} property to determine which buttons are displayed in the dialog box. The return values are defined in the Windows unit.
\par \page 
#{\footnote {#}IDH_WMD_EVENTS}
${\footnote {$}TPJWinMsgDlg events}
@{\footnote {@}List of events implemented by TPJWinMsgDlg}

\pard \plain \plain\f1\fs18\cf0\b Events\plain\f0\fs18\cf0 
\par \pard \tx400 
\par \tab {\strike OnHelp}{\v IDH_WMD_ONHELP}
\par 
\par \page 
#{\footnote {#}IDH_WMD_ONHELP}
${\footnote {$}TPJWinMsgDlg.OnHelp}
K{\footnote {K}TPJWinMsgDlg,OnHelp;OnHelp,TPJWinMsgDlg;OnHelp}
A{\footnote {A}TPJWinMsgDlg_OnHelp;OnHelp_event;OnHelp}
@{\footnote {@}Description of the inherited OnHelp event from perspective of TPJWinMsgDlg}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJWinMsgDlg.\plain\f1\fs22\cf2\b OnHelp\plain\f0\fs22\cf2\b 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJWinMsgDlg}{\v IDH_WMD_CLASS}\plain\f1\fs18\cf0           {\strike See also}{\v !AL(TPJWinMsgDlg_HelpFile;TPJWinMsgDlg_HelpContext)}\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Event triggered when a user requests help in a dialog box\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f3\fs18\cf0\b property\plain\f2\fs18\cf0  \plain\f3\fs18\cf0 OnHelp\plain\f2\fs18\cf0 : {\strike TNotifyEvent}{\v !AL(TNotifyEvent,1)};
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 The OnHelp event is triggered when the user requests help in a dialog either by clicking a help button or by pressing F1. If OnHelp is handled then the component's default help processing is inhibited - the event handler must display the required help.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 This event is never triggered if the dialog box does not display a help button. F1 keypresses are ignored if there is no Help Button.\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_MD_CLASS}
${\footnote {$}TPJMessageDialog}
K{\footnote {K}TPJMessageDialog}
A{\footnote {A}TPJMessageDialog;TPJMessageDialog_object}
@{\footnote {@}Description of the TPJMessageDialog component}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \{bmlt TPJMessageDialog.bmp\}\plain\f0\fs22\cf2\b  TPJMessageDialog\plain\f0\fs22\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\ul Heirachy}{\v IDH_MD_HEIRACHY}          {\ul Properties}{\v IDH_MD_PROPERTIES}          {\ul Methods}{\v IDH_MD_METHODS}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard TPJMessageDialog encapsulates a Windows message box dialog\plain\f1\fs18\cf0  and exposes the same properties as version 1 of the component.\plain\f0\fs18\cf0 
\par 
\par \plain\f0\fs18\cf0\b Unit\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 {\strike PJMessageDialog}{\v IDH_UNIT}
\par 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 TPJMessageDialog provides a customisable Windows message dialog box. The component wraps the Windows MessageBoxIndirect API call.\plain\f1\fs18\cf0  \plain\f1\fs18\cf0\b Note:\plain\f1\fs18\cf0  This component is provided for backwards compatibility with release 1 of PJMessageDialog and exposes the same properties as the earlier version. In new applications it is recommended that either {\strike TPJWinMsgDlg}{\v IDH_WMD_CLASS} or {\strike TPJVCLMsgDlg}{\v IDH_VMD_CLASS} is used preference.\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 The text displayed in the dialog box is determined by the {\strike Text}{\v IDH_MD_TEXT} property. Various button groupings can be displayed using the {\strike ButtonGroup}{\v IDH_MD_BUTTONGROUP} property. Setting a non-zero {\strike HelpContext}{\v IDH_MD_HELPCONTEXT} causes a help button to be displayed. The {\strike IconKind}{\v IDH_MD_ICONKIND} property allows a choice of various standard windows icons to be displayed. A user defined icon extracted from a named resource, specified by {\strike IconResource}{\v IDH_MD_ICONRESOURCE} can also be displayed. The window title can be set using the {\strike Title}{\v IDH_MD_TITLE} property, otherwise a default title, related to the kind of icon being displayed is used. The {\strike MakeSound}{\v IDH_MD_MAKESOUND} property determines whether an appropriate system sound is generated when the dialog is displayed.
\par \page 
#{\footnote {#}IDH_MD_HEIRACHY}
${\footnote {$}TPJMessageDialog heirachy}
@{\footnote {@}Class heirachy for TPJMessageDialog component}

\pard \plain \plain\f0\fs18\cf0\b Heirachy\plain\f0\fs18\cf0 
\par 
\par {\strike TObject}{\v !AL(TObject_object,1)}
\par     |
\par {\strike TPersistent}{\v !AL(TPersistent_object,1)}
\par     |
\par {\strike TComponent}{\v !AL(TComponent_object,1)}\plain\f0\fs20\cf0 
\par \plain\f0\fs18\cf0     |
\par \plain\f1\fs18\cf0 {\strike TPJMsgDlgBase}{\v IDH_BASE_CLASS}
\par \plain\f0\fs18\cf0     |
\par \plain\f1\fs18\cf0 {\strike TPJWinMsgDlgCustom}{\v IDH_WMDC_CLASS}\plain\f1\fs20\cf0 
\par \page 
#{\footnote {#}IDH_MD_PROPERTIES}
${\footnote {$}TPJMessageDialog properties}
@{\footnote {@}List of properties of TPJMessageDialog}

\pard \plain \plain\f0\fs18\cf0\b Properties\plain\f0\fs18\cf0 
\par 
\par \pard \tx200 \tab {\strike ButtonGroup}{\v IDH_MD_BUTTONGROUP}
\par \tab {\strike HelpContext}{\v IDH_MD_HELPCONTEXT}
\par \plain\f1\fs18\cf0 \tab {\strike IconKind}{\v IDH_MD_ICONKIND}\plain\f0\fs18\cf0 
\par \tab {\strike IconResource}{\v IDH_MD_ICONRESOURCE}
\par \tab {\strike MakeSound}{\v IDH_MD_MAKESOUND}
\par \tab {\strike Name}{\v !AL(TComponent_Name,1)}
\par \tab {\strike Tag}{\v !AL(TComponent_Tag,1)}
\par \tab {\strike Text}{\v IDH_MD_TEXT}
\par \tab {\strike Title}{\v IDH_MD_TITLE}
\par \page 
#{\footnote {#}IDH_MD_BUTTONGROUP}
${\footnote {$}TPJMessageDialog.ButtonGroup}
K{\footnote {K}TPJMessageDialog,ButtonGroup;ButtonGroup,TPJMessageDialog;ButtonGroup}
A{\footnote {A}TPJMessageDialog_ButtonGroup;ButtonGroup_property;ButtonGroup}
@{\footnote {@}Description of the inherited ButtonGroup property from the perspective of TPJMessageDialog.}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJMessageDialog.ButtonGroup
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJMessageDialog}{\v IDH_MD_CLASS}          {\strike See also}{\v !AL(TPJMessageDialog_HelpContext;TPJMessageDialog_Execute)}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Determines which buttons appear in the dialog box.
\par 
\par \pard \fi-200 \li200 \plain\f2\fs18\cf0\b type\plain\f2\fs18\cf0  TPJMsgDlgButtonGroup = (bgAbortRetryIgnore, bgOK, bgOKCancel, bgRetryCancel, bgYesNo, bgYesNoCancel);
\par \pard \plain\f2\fs8\cf0 
\par \pard \keep \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  ButtonGroup: TPJMsgDlgButtonGroup;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 The buttons which appear in the dialog box depend on the value of this property. The possibilities are:
\par \plain\f0\fs8\cf0 
\par \pard \fi-1800 \li1800 \tx1800 \plain\f0\fs18\cf0\b Value\plain\f0\fs18\cf0 \tab \plain\f0\fs18\cf0\b Buttons used\plain\f0\fs18\cf0 
\par \pard \fi-1800 \li1800 \tx1800 \brdrt \brdrs \plain\f0\fs8\cf0  
\par \pard \fi-1800 \li1800 \tx1800 \plain\f0\fs18\cf0\i bgAbortRetryIgnore\plain\f0\fs18\cf0 \tab Abort, Retry and Ignore buttons\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i bgOK\plain\f0\fs18\cf0 \tab A single OK button (default value)\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i bgOKCancel\plain\f0\fs18\cf0 \tab An OK and a Cancel button\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i bgRetryCancel\plain\f0\fs18\cf0 \tab A Retry and a Cancel button\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i bgYesNo\plain\f0\fs18\cf0 \tab A Yes and a No button\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i bgYesNoCancel\plain\f0\fs18\cf0 \tab Yes, No and Cancel buttons.
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i bg\plain\f1\fs18\cf0\i Unkown\plain\f0\fs18\cf0 \tab An unsupported or unknown group of buttons\plain\f1\fs18\cf0 . This item should not be selected in TPJMessageDialog. If it is selected it has the same effect as bgOK.\plain\f0\fs18\cf0 
\par \pard \fi-1800 \li1800 \tx1800 \brdrb \brdrs \plain\f0\fs8\cf0  
\par \pard 
\par \plain\f0\fs18\cf0 To include a help button in the dialog box, set the {\strike HelpContext}{\v IDH_MD_HELPCONTEXT} property to some non-zero value.
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 A value associated with the button that was clicked is returned from the {\strike Execute}{\v IDH_MD_EXECUTE} method depends on which button was clicked.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 The default value of the property is \plain\f1\fs18\cf0\i bgOK\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_MD_HELPCONTEXT}
${\footnote {$}TPJMessageDialog.HelpContext}
K{\footnote {K}TPJMessageDialog,HelpContext;HelpContext,TPJMessageDialog;HelpContext}
A{\footnote {A}TPJMessageDialog_HelpContext;HelpContext_property;HelpContext}
@{\footnote {@}Description of the inherited HelpContext property from the perspective of TPJMessageDialog}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJMessageDialog.HelpContext
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJMessageDialog}{\v IDH_MD_CLASS}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Specifies the context number for online Help and displays a help button.
\par 
\par \pard \keep \plain\f2\fs18\cf0\b type \plain\f2\fs18\cf0 THelpContext = -MaxLongInt..MaxLongInt;
\par \plain\f2\fs8\cf0\b 
\par \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  HelpContext: THelpContext;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Set the HelpContext property to the help context nunber of the relevant topic in the help file\plain\f1\fs18\cf0  associated with the owning form.\plain\f0\fs18\cf0  When a non-zero help context number is specified a Help button is displayed in the dialog box which calls context sensitive help with the given help context\plain\f1\fs18\cf0  when pressed\plain\f0\fs18\cf0 .\plain\f0\fs20\cf0 
\par \page 
#{\footnote {#}IDH_MD_ICONKIND}
${\footnote {$}TPJMessageDialog.IconKind}
K{\footnote {K}TPJMessageDialog,IconKind;IconKind,TPJMessageDialog;IconKind}
A{\footnote {A}TPJMessageDialog_IconKind;IconKind_property;IconKind}
@{\footnote {@}Description of the IconKind property of TPJMessageDialog.}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJMessageDialog.IconKind
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJMessageDialog}{\v IDH_MD_CLASS}          {\strike See also}{\v !AL(TPJMessageDialog_Title;TPJMessageDialog_MakeSound;TPJMessageDialog_IconResource)}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Determines the icon displayed in the dialog box.
\par 
\par \pard \fi-200 \li200 \plain\f2\fs18\cf0\b type\plain\f2\fs18\cf0  TPJMsgDlgIconKind = (miWarning, miInformation, miQuery, miError, miUser);
\par \pard \plain\f2\fs8\cf0 
\par \pard \keep \plain\f2\fs18\cf0\b property \plain\f2\fs18\cf0 IconKind: TPJMsgDlgIconKind;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Set this property to pres\plain\f1\fs18\cf0 c\plain\f0\fs18\cf0 ribe which icon will appear in the dialog box. This property also determines the default window title and what sound is played. The default window title can be overridden using the {\strike Title}{\v IDH_MD_TITLE} property and sounds are only played when {\strike MakeSound}{\v IDH_MD_MAKESOUND} is True.
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 The effect of each of the possible icon kinds are described below:
\par \plain\f0\fs8\cf0 
\par \pard \fi-3200 \li3200 \tx1600 \tx3200 \tx4800 \keep \plain\f0\fs18\cf0\b Value\tab Icon\tab Default title\tab System Sound\plain\f0\fs18\cf0 
\par \pard \fi-3200 \li3200 \tx1600 \tx3200 \tx4800 \keep \brdrt \brdrs \plain\f0\fs8\cf0  
\par \pard \fi-3200 \li3200 \tx1600 \tx3200 \tx4800 \keep \plain\f0\fs18\cf0\i miWarning\plain\f0\fs18\cf0 \tab \{bmct IDIExclamation.bmp\}\tab "Warning"\tab MB_ICONEXCLAMATION
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i miInformation\plain\f0\fs18\cf0 \tab \{bmct IDIAsterisk.bmp\}\tab "Information"\tab MB_ICONASTERISK
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i miQuery\plain\f0\fs18\cf0 \tab \{bmct IDIQuestion.bmp\}\tab "Confirm"\tab MB_ICONQUESTION
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i miError\plain\f0\fs18\cf0 \tab \{bmct IDIHand.bmp\}\tab "Error"\tab MB_ICONHAND
\par \plain\f0\fs26\cf0 
\par \plain\f0\fs18\cf0\i miUser\plain\f0\fs18\cf0 \tab IconResource *\tab Application.Title **\tab MB_OK
\par \pard \fi-3200 \li3200 \tx1600 \tx3200 \tx4800 \keep \brdrb \brdrs \plain\f0\fs8\cf0  
\par \pard \fi-300 \li300 \tx300 \plain\f0\fs18\cf0 *\tab Icon is loaded from the resource specified by the {\strike IconResource}{\v IDH_MD_ICONRESOURCE} property.
\par **\tab The default title is set to the same value as the {\strike Application}{\v !AL(TApplication_object,1)} object's {\strike Title}{\v !AL(TApplication_Title,1)} property.
\par \pard \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 IconKind defaults to \plain\f0\fs18\cf0\i miInformation\plain\f0\fs18\cf0 .
\par \page 
#{\footnote {#}IDH_MD_ICONRESOURCE}
${\footnote {$}TPJMessageDialog.IconResource}
K{\footnote {K}TPJMessageDialog,IconResource;IconResource,TPJMessageDialog;IconResource}
A{\footnote {A}TPJMessageDialog_IconResource;IconResource_property;IconResource}
@{\footnote {@}Description of the inherited IconResource property from the perspective of TPJMessageDialog.}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJMessageDialog.IconResource
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJMessageDialog}{\v IDH_MD_CLASS}          {\strike See also}{\v !AL(TPJMessageDialog_IconKind)}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Specifies the resource containing the dialog box's icon.
\par 
\par \pard \keep \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  IconResource: \plain\f2\fs18\cf0\b string\plain\f2\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Set IconResource to identify the resource to be used to display a user defined icon in the dialog box. \plain\f1\fs18\cf0 If IconResource is left blank then the resource name "MAINICON"* is used. \plain\f0\fs18\cf0 The icon resource must be contained in the executable file. If the \plain\f1\fs18\cf0 such a\plain\f0\fs18\cf0  resource cannot be found then no icon is displayed.
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 {\strike IconKind}{\v IDH_MD_ICONKIND} must be set to \plain\f0\fs18\cf0\i miUser\plain\f0\fs18\cf0  to display a user defined icon. IconResource is ignored if IconKind has any other value.
\par \plain\f0\fs8\cf0 
\par \pard \fi-800 \li800 \tx800 \plain\f1\fs18\cf0\b Note 1:\plain\f1\fs18\cf0  *\tab MAINICON is the resource name of the application's main icon in Delphi. 
\par \plain\f1\fs18\cf0\b Note 2:\plain\f1\fs18\cf0 \tab IconResource is handled differently that In version 1 of the component -where leaving the property blank meant that no icon was displayed. To emulate this effect set IconResource to a non-existant resource name.
\par \plain\f1\fs18\cf0\b Note 3:\plain\f1\fs18\cf0 \tab To reference an icon resource with a numeric id (rather than a string name) preceed the numeric value by a '#' character.\plain\f0\fs8\cf0 
\par \page 
#{\footnote {#}IDH_MD_MAKESOUND}
${\footnote {$}TPJMessageDialog.MakeSound}
K{\footnote {K}TPJMessageDialog,MakeSound;MakeSound,TPJMessageDialog;MakeSound}
A{\footnote {A}TPJMessageDialog_MakeSound;MakeSound_property;MakeSound}
@{\footnote {@}Description of the inherited MakeSound property from the perspective of TPJMessageDialog.}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJMessageDialog.MakeSound
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJMessageDialog}{\v IDH_MD_CLASS}          {\strike See also}{\v !AL(TPJMessageDialog_IconKind)}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Flag that determines if a sound will be emitted when the dialog box is display\plain\f1\fs18\cf0 ed\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  MakeSound: Boolean;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Set MakeSound to true to play a sound when the dialog appears. If MakeSound is false then no sound is played.
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 The sound played is one of the standard system sounds. Which sound is used depends on the value of the {\strike IconKind}{\v IDH_MD_ICONKIND} property.
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 The property's default value is \plain\f1\fs18\cf0\i False\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_MD_TEXT}
${\footnote {$}TPJMessageDialog.Text}
K{\footnote {K}TPJMessageDialog,Text;Text,TPJMessageDialog;Text}
A{\footnote {A}TPJMessageDialog_Text;Text_property;Text}
@{\footnote {@}Description of the inherited Text property from the perspective of TPJMessageDialog}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJMessageDialog.Text
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJMessageDialog}{\v IDH_MD_CLASS}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard The text that is displayed in the dialog box.
\par 
\par \pard \keep \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  Text: \plain\f2\fs18\cf0\b string\plain\f2\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Set this property to the text that you wish to display in the body on the dialog box. The default is to display nothing.
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0\b Note:\plain\f1\fs18\cf0  Line breaks in the dialog box can be forced by including CR LF pairs in the Text string. This can't be done at design time using the standard Delphi string property editor. However an {\strike Extended String Property Editor}{\v IDH_EXTSTRPROPED} can be installed to enable multiple lines of text to be assigned at design time.\plain\f0\fs20\cf0 
\par \page 
#{\footnote {#}IDH_MD_TITLE}
${\footnote {$}TPJMessageDialog.Title}
K{\footnote {K}TPJMessageDialog,Title;Title,TPJMessageDialog;Title}
A{\footnote {A}TPJMessageDialog_Title;Title_property;Title}
@{\footnote {@}Description of the inherited Title property from the perspective of TPJMessageDialog.}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJMessageDialog.Title
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJMessageDialog}{\v IDH_MD_CLASS}          {\strike See also}{\v !AL(TPJMessageDialog_IconKind)}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard The dialog box's window title.
\par 
\par \pard \keep \plain\f2\fs18\cf0\b type\plain\f2\fs18\cf0  TCaption = \plain\f2\fs18\cf0\b type string\plain\f2\fs18\cf0 ;
\par \plain\f2\fs8\cf0 
\par \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  Title: TCaption;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Set this property to the string that should be displayed as the dialog box window title. Leaving this property equal to the empty string causes a default title to be displayed, which depends on the value of the IconKind property. See {\strike IconKind}{\v IDH_MD_ICONKIND} for details of the default window titles.
\par \plain\f0\fs20\cf0 
\par \page 
#{\footnote {#}IDH_MD_METHODS}
${\footnote {$}TPJMessageDialog methods}
@{\footnote {@}List of methods implemented by TPJMessageDialog}

\pard \plain \plain\f0\fs18\cf0\b Methods\plain\f0\fs18\cf0 
\par \pard \tx400 
\par \tab {\strike Execute}{\v IDH_MD_EXECUTE}
\par 
\par \pard \tx200 TPJMessageDialog also inherits methods from {\strike TComponent}{\v !AL(TComponent_object,1)}.
\par \page 
#{\footnote {#}IDH_MD_EXECUTE}
${\footnote {$}TPJMessageDialog.Execute}
K{\footnote {K}TPJMessageDialog,Execute;Execute,TPJMessageDialog;Execute}
A{\footnote {A}TPJMessageDialog_Execute;Execute_property;Execute}
@{\footnote {@}Description of the inherited Execute method from perspective of TPJMessageDialog}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJMessageDialog.Execute
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJMessageDialog}{\v IDH_MD_CLASS}          {\strike See also}{\v !AL(TPJMessageDialog_ButtonGroup)}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Displays the dialog box\plain\f1\fs18\cf0  and returns information about the button pressed to close it\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f2\fs18\cf0\b function\plain\f2\fs18\cf0  Execute: Integer;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Call Execute to display the dialog box. Execute returns a value associated with the button that was clicked to close the dialog box as follows:
\par \plain\f0\fs8\cf0 
\par \pard \fi-1600 \li1600 \tx1600 \keep \plain\f0\fs18\cf0\b Button clicked\tab Return value\plain\f0\fs18\cf0 
\par \pard \fi-1600 \li1600 \tx1600 \brdrt \brdrs \plain\f0\fs8\cf0  
\par \pard \fi-1600 \li1600 \tx1600 \keep \plain\f0\fs18\cf0 Abort\tab \plain\f0\fs18\cf0\i IDABORT\plain\f1\fs18\cf0\i  (3)\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Cancel\tab \plain\f0\fs18\cf0\i IDCANCEL\plain\f1\fs18\cf0\i  (2)\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Ignore\tab \plain\f0\fs18\cf0\i IDIGNORE\plain\f1\fs18\cf0\i  (5)\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 No\tab \plain\f0\fs18\cf0\i IDNO\plain\f1\fs18\cf0\i  (7)\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 OK\tab \plain\f0\fs18\cf0\i IDOK\plain\f1\fs18\cf0\i  (1)\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Retry\tab \plain\f0\fs18\cf0\i IDRETRY\plain\f1\fs18\cf0\i  (4)\plain\f0\fs18\cf0 \tab 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Yes\tab \plain\f0\fs18\cf0\i IDYES\plain\f1\fs18\cf0\i  (6)\plain\f0\fs18\cf0 
\par \pard \fi-1600 \li1600 \tx1600 \brdrb \brdrs \plain\f0\fs8\cf0  
\par \pard \fi-1600 \li1600 \tx1600 
\par \pard \plain\f0\fs18\cf0 Use the {\strike ButtonGroup}{\v IDH_MD_BUTTONGROUP} property to determine which buttons are displayed in the dialog box. The return values are defined in the Windows unit.
\par \page 
#{\footnote {#}IDH_VMD_CLASS}
${\footnote {$}TPJVCLMsgDlg}
K{\footnote {K}TPJVCLMsgDlg}
A{\footnote {A}TPJVCLMsgDlg;TPJVCLMsgDlg_object}
@{\footnote {@}Description of the TPJVCLMsgDlg component}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \{bmlt TPJVCLMsgDlg.bmp\}\plain\f0\fs22\cf2\b  TPJVCLMsgDlg\plain\f0\fs22\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\ul Heirachy}{\v IDH_VMD_HEIRACHY}          {\ul Properties}{\v IDH_VMD_PROPERTIES}          {\ul Methods}{\v IDH_VMD_METHODS}\plain\f1\fs18\cf0           {\ul Events}{\v IDH_VMD_EVENTS}\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard TPJVCLMsgDlg\plain\f1\fs18\cf0  \plain\f0\fs18\cf0 encapsulates a \plain\f1\fs18\cf0 Delphi VCL \plain\f0\fs18\cf0 message dialog\plain\f1\fs18\cf0  \plain\f0\fs18\cf0 box\plain\f1\fs18\cf0 , providing a fine degree of control over its appearance.\plain\f0\fs18\cf0 
\par 
\par \plain\f0\fs18\cf0\b Unit\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 {\strike PJMessageDialog}{\v IDH_UNIT}
\par 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 TPJ\plain\f1\fs18\cf0 VCL\plain\f0\fs18\cf0 MsgDlg provides a customisable message dialog \plain\f1\fs18\cf0 box that is based on that provided byu the Delphi CreateMessageDialog function\plain\f0\fs18\cf0 . The component \plain\f1\fs18\cf0 provides a similar (but extended) interface to the {\strike TPJWinMsgDlg}{\v IDH_WMD_CLASS} component but uses a different method to display the dialog box. This component is recommended when a finer degree of control to that provided by TPJWinMsgDlg is required.\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 The text displayed in the dialog box is determined by the {\strike Text}{\v IDH_VMD_TEXT} property. Various button groupings can be displayed using the {\strike ButtonGroup}{\v IDH_VMD_BUTTONGROUP} \plain\f1\fs18\cf0 and/or {\strike Buttons}{\v IDH_VMD_BUTTONS} \plain\f0\fs18\cf0 propert\plain\f1\fs18\cf0 ies\plain\f0\fs18\cf0 . Setting a non-zero {\strike HelpContext}{\v IDH_VMD_HELPCONTEXT} causes a help button to be displayed. The {\strike Kind}{\v IDH_VMD_KIND} property allows a choice of various standard \plain\f1\fs18\cf0 dialog boxes and \plain\f0\fs18\cf0 icons to be displayed. A user defined icon extracted from a named resource, specified by {\strike IconResource}{\v IDH_VMD_ICONRESOURCE} can also be displayed. The window title can be set using the {\strike Title}{\v IDH_VMD_TITLE} property, otherwise a default title\plain\f1\fs18\cf0  is used that is \plain\f0\fs18\cf0 related to the kind of icon being displayed. The {\strike MakeSound}{\v IDH_VMD_MAKESOUND} property determines whether an appropriate system sound is generated when the dialog is displayed\plain\f1\fs18\cf0 . It is possible to set how the dialog box is to be aligned to screen or form using the {\strike Align}{\v IDH_VMD_ALIGN} property in combination with the {\strike OffsetLeft}{\v IDH_VMD_OFFSETLEFT} and {\strike OffsetTop}{\v IDH_VMD_OFFSETTOP} properties.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 The dialog box can be invoked with the {\strike Execute}{\v IDH_VMD_EXECUTE} method or an instance of the dialog can be created using the {\strike CreateDialog}{\v IDH_VMD_CREATEDIALOG} method. In the latter case the user has responsibility for showing and hiding the dialog and destroying the instance.\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_VMD_HEIRACHY}
${\footnote {$}TPJVCLMsgDlg heirachy}
@{\footnote {@}Class heirachy for TPJVCLMsgDlg component}

\pard \plain \plain\f0\fs18\cf0\b Heirachy\plain\f0\fs18\cf0 
\par 
\par {\strike TObject}{\v !AL(TObject_object,1)}
\par     |
\par {\strike TPersistent}{\v !AL(TPersistent_object,1)}
\par     |
\par {\strike TComponent}{\v !AL(TComponent_object,1)}\plain\f0\fs20\cf0 
\par \plain\f0\fs18\cf0     |
\par \plain\f1\fs18\cf0 {\strike TPJMsgDlgBase}{\v IDH_BASE_CLASS}\plain\f1\fs20\cf0 
\par \page 
#{\footnote {#}IDH_VMD_PROPERTIES}
${\footnote {$}TPJVCLMsgDlg properties}
@{\footnote {@}List of properties of TPJVCLMsgDlg}

\pard \plain \plain\f0\fs18\cf0\b Properties\plain\f0\fs18\cf0 
\par 
\par \pard \tx200 \tab {\strike Align}{\v IDH_VMD_ALIGN}\plain\f1\fs18\cf0 
\par \tab \plain\f0\fs18\cf0 {\strike ButtonGroup}{\v IDH_VMD_BUTTONGROUP}
\par \plain\f1\fs18\cf0 \tab {\strike Buttons}{\v IDH_VMD_BUTTONS}\plain\f0\fs18\cf0 
\par \plain\f1\fs18\cf0 \tab {\strike DefButton}{\v IDH_VMD_DEFBUTTON}\plain\f0\fs18\cf0 
\par \tab {\strike HelpContext}{\v IDH_VMD_HELPCONTEXT}
\par \plain\f1\fs18\cf0 \tab {\strike HelpFile}{\v IDH_VMD_HELPFILE}\plain\f0\fs18\cf0 
\par \tab {\strike IconResource}{\v IDH_VMD_ICONRESOURCE}
\par \plain\f1\fs18\cf0 \tab {\strike Kind}{\v IDH_VMD_KIND}\plain\f0\fs18\cf0 
\par \tab {\strike MakeSound}{\v IDH_VMD_MAKESOUND}
\par \tab {\strike Name}{\v !AL(TComponent_Name,1)}
\par \plain\f1\fs18\cf0 \tab {\strike OffsetLeft}{\v IDH_VMD_OFFSETLEFT}
\par \tab {\strike OffsetTop}{\v IDH_VMD_OFFSETTOP}
\par \tab {\strike Options}{\v IDH_VMD_OPTIONS}\plain\f0\fs18\cf0 
\par \tab {\strike Tag}{\v !AL(TComponent_Tag,1)}
\par \tab {\strike Text}{\v IDH_VMD_TEXT}
\par \tab {\strike Title}{\v IDH_VMD_TITLE}
\par \page 
#{\footnote {#}IDH_VMD_ALIGN}
${\footnote {$}TPJVCLMsgDlg.Align}
K{\footnote {K}TPJVCLMsgDlg,Align;Align,TPJVCLMsgDlg;Align}
A{\footnote {A}TPJVCLMsgDlg_Align;Align_property;Align}
@{\footnote {@}Description of Align property introduced  in TPJVCLMsgDlg}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJVCLMsgDlg.Align
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJVCLMsgDlg}{\v IDH_VMD_CLASS}          \plain\f1\fs18\cf0 {\strike See also}{\v !AL(TPJVCLMsgDlg_OffsetLeft;TPJVCLMsgDlg_OffsetTop)}\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Determines \plain\f1\fs18\cf0 the on screen \plain\f0\fs18\cf0 alignment of \plain\f1\fs18\cf0 the \plain\f0\fs18\cf0 dialog box.
\par 
\par \pard \fi-200 \li200 \plain\f2\fs18\cf0\b type\plain\f2\fs18\cf0  TPJMsgDlgAlign\plain\f3\fs18\cf0  \plain\f2\fs18\cf0 = (mdaScreenCentre, mdaScreenOffset,
\par \plain\f3\fs18\cf0   \plain\f2\fs18\cf0 mdaFormCentre, mdaFormOffset\plain\f3\fs18\cf0 );
\par \plain\f2\fs8\cf0 
\par \pard \keep \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  Align: TPJMsgDlgAlign;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 The Align property determines the aligment of the dialog box relative to either the screen or the owner form. The various values it can take are described below\plain\f0\fs18\cf0 :
\par \plain\f0\fs8\cf0 
\par \pard \fi-1800 \li1800 \tx1800 \plain\f0\fs18\cf0\b Value\plain\f0\fs18\cf0 \tab \plain\f1\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \pard \fi-1800 \li1800 \tx1800 \brdrt \brdrs \plain\f0\fs8\cf0  
\par \pard \fi-1800 \li1800 \tx1800 \plain\f0\fs18\cf0\i mdaScreenCentre\plain\f0\fs18\cf0 \tab \plain\f1\fs18\cf0 D\plain\f0\fs18\cf0 ialog is centred over screen\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i mdaScreenOffset\plain\f0\fs18\cf0 \tab \plain\f1\fs18\cf0 D\plain\f0\fs18\cf0 ialog \plain\f1\fs18\cf0 is \plain\f0\fs18\cf0 offset \plain\f1\fs18\cf0 from the top left corner of the \plain\f0\fs18\cf0 screen \plain\f1\fs18\cf0 by the amount given by the values of the {\strike OffsetLeft}{\v IDH_VMD_OFFSETLEFT}\plain\f0\fs18\cf0  and {\strike OffsetTop}{\v IDH_VMD_OFFSETTOP}\plain\f1\fs18\cf0  properties.\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i mdaFormCentre\plain\f0\fs18\cf0 \tab \plain\f1\fs18\cf0 Dialog is centred over the owning form. If no owning form can be found the dialog is centred on the screen.\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i mdaFormOffset\plain\f0\fs18\cf0 \tab \plain\f1\fs18\cf0 Dialog is offset relative to the top left corner of the owning form by the amount given by the values of the {\strike OffsetLeft}{\v IDH_VMD_OFFSETLEFT}\plain\f0\fs18\cf0  and {\strike OffsetTop}{\v IDH_VMD_OFFSETTOP}\plain\f1\fs18\cf0  properties. If no owing form can be found the dialog is offset on the screen.\plain\f0\fs18\cf0 
\par \pard \fi-1800 \li1800 \tx1800 \brdrb \brdrs \plain\f0\fs8\cf0  
\par \pard 
\par \plain\f1\fs18\cf0 The default value of the property is \plain\f1\fs18\cf0\i mdaScreenCentre\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_VMD_BUTTONGROUP}
${\footnote {$}TPJVCLMsgDlg.ButtonGroup}
K{\footnote {K}TPJVCLMsgDlg,ButtonGroup;ButtonGroup,TPJVCLMsgDlg;ButtonGroup}
A{\footnote {A}TPJVCLMsgDlg_ButtonGroup;ButtonGroup_property;ButtonGroup}
@{\footnote {@}Description of the ButtonGroup property from the perspective of TPJVCLMsgDlg}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJVCLMsgDlg.ButtonGroup
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJVCLMsgDlg}{\v IDH_VMD_CLASS}          {\strike See also}{\v !AL(TPJVCLMsgDlg_Buttons;TPJVCLMsgDlg_HelpContext;TPJVCLMsgDlg_Options;TPJVCLMsgDlg_Execute)}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Determines which buttons appear in the dialog box.
\par 
\par \pard \fi-200 \li200 \plain\f2\fs18\cf0\b type\plain\f2\fs18\cf0  TPJMsgDlgButtonGroup = (bgAbortRetryIgnore, bgOK, bgOKCancel, bgRetryCancel, bgYesNo, bgYesNoCancel\plain\f3\fs18\cf0 , bgUnknown, bgCancelTryContinue\plain\f2\fs18\cf0 );
\par \pard \plain\f2\fs8\cf0 
\par \pard \keep \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  ButtonGroup: TPJMsgDlgButtonGroup;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 The buttons which appear in the dialog box depend on the value of this property\plain\f1\fs18\cf0  and on the associated {\strike Buttons}{\v IDH_VMD_BUTTONS} property. 
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 When the value of the Buttons property is changed the to the set of buttons contained in the group. Setting ButtonGroup to \plain\f1\fs18\cf0\i bgUnkown\plain\f1\fs18\cf0  sets Buttons to the empty set [ ]. Conversely, when the Buttons property is changed ButtonGroup is set to any matching group, or to \plain\f1\fs18\cf0\i bgUnknown\plain\f1\fs18\cf0  if the set of buttons in the Buttons property is not a valid button group.
\par \plain\f1\fs8\cf0 
\par \plain\f0\fs18\cf0 The \plain\f1\fs18\cf0 possible values of ButtonGroup\plain\f0\fs18\cf0  are\plain\f1\fs18\cf0  as follows:\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \pard \fi-2400 \li2400 \tx2400 \plain\f0\fs18\cf0\b Value\plain\f0\fs18\cf0 \tab \plain\f0\fs18\cf0\b Buttons used\plain\f0\fs18\cf0 
\par \pard \fi-2400 \li2400 \tx2400 \brdrt \brdrs \plain\f0\fs8\cf0  
\par \pard \fi-2400 \li2400 \tx2400 \plain\f0\fs18\cf0\i bgAbortRetryIgnore\plain\f0\fs18\cf0 \tab Abort, Retry and Ignore buttons\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i bgOK\plain\f0\fs18\cf0 \tab A single OK button (default value)\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i bgOKCancel\plain\f0\fs18\cf0 \tab An OK and a Cancel button\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i bgRetryCancel\plain\f0\fs18\cf0 \tab A Retry and a Cancel button\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i bgYesNo\plain\f0\fs18\cf0 \tab A Yes and a No button\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i bgYesNoCancel\plain\f0\fs18\cf0 \tab Yes, No and Cancel buttons.
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i bg\plain\f1\fs18\cf0\i Unknown\plain\f0\fs18\cf0 \tab An unsupported or unknown group of buttons\plain\f1\fs18\cf0 . This item should not be selected explicitly. If it is selected it has the same effect as \plain\f1\fs18\cf0\i bgOK\plain\f1\fs18\cf0 .
\par \plain\f1\fs8\cf0 
\par \plain\f0\fs18\cf0\i bgCancelTryContinue\plain\f1\fs18\cf0 \tab Synonym for \plain\f1\fs18\cf0\i bgAbortRetryIgnore \plain\f1\fs18\cf0 with same effect. (Note that in TPJWinMsgDlg \plain\f1\fs18\cf0\i bgCancelTryContinue \plain\f1\fs18\cf0 behaves differently to bgAbortRetryIgnore.) \plain\f0\fs18\cf0 
\par \pard \fi-1800 \li1800 \tx1800 \brdrb \brdrs \plain\f0\fs8\cf0  
\par \pard 
\par \plain\f0\fs18\cf0 To include a help button in the dialog box\plain\f1\fs18\cf0  do one of two things:
\par \plain\f1\fs8\cf0 
\par \pard \fi-400 \li400 \tx400 \plain\f4\fs18\cf0 1)\plain\f1\fs18\cf0 \tab \plain\f0\fs18\cf0 set the {\strike HelpContext}{\v IDH_VMD_HELPCONTEXT} property to some non-zero value\plain\f1\fs18\cf0  and include \plain\f1\fs18\cf0\i mdoAutoHelpBtn\plain\f1\fs18\cf0  in the {\strike Options}{\v IDH_VMD_OPTIONS} set property \plain\f1\fs18\cf0\i or\plain\f1\fs18\cf0 
\par \plain\f4\fs18\cf0 2)\plain\f1\fs18\cf0 \tab Include the \plain\f1\fs18\cf0\i mbHelp\plain\f1\fs18\cf0  button value in the {\strike Buttons}{\v IDH_VMD_BUTTONS} property.\plain\f0\fs18\cf0 
\par \pard \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 If a cancel button is included in the group whether it appears or not depends on whether the \plain\f0\fs18\cf0\i mdoInhibitCancel\plain\f1\fs18\cf0  value is included in the {\strike Options}{\v IDH_VMD_OPTIONS} property set.
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 A value associated with the button that was clicked is returned from the {\strike Execute}{\v IDH_VMD_EXECUTE} method.
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 The default value of the property is \plain\f1\fs18\cf0\i bgOK\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_VMD_BUTTONS}
${\footnote {$}TPJVCLMsgDlg.Buttons}
K{\footnote {K}TPJVCLMsgDlg,Buttons;Buttons,TPJVCLMsgDlg;Buttons}
A{\footnote {A}TPJVCLMsgDlg_Buttons;Buttons_property;Buttons}
@{\footnote {@}Description of Buttons property introduced  in TPJVCLMsgDlg}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJVCLMsgDlg.Buttons
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJVCLMsgDlg}{\v IDH_VMD_CLASS}          {\strike See also}{\v !AL(TPJVCLMsgDlg_ButtonGroup;TPJVCLMsgDlg_HelpContext;TPJVCLMsgDlg_Options;TPJVCLMsgDlg_DefButton)}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Determines the buttons displayed in the dialog box .
\par 
\par \pard \fi-200 \li200 \plain\f2\fs18\cf0\b type\plain\f2\fs18\cf0  TMsgDlgButton\plain\f3\fs18\cf0  = mbYes, mbNo, mbOK, mbCancel, mbAbort,
\par   mbRetry, mbIgnore, mbAll, mbNoToAll, mbYesToAll, mbHelp);
\par \plain\f2\fs8\cf0\b 
\par \plain\f2\fs18\cf0\b type\plain\f2\fs18\cf0  TMsgDlgButtons = \plain\f2\fs18\cf0\b set of\plain\f2\fs18\cf0  TMsgDlgBtn;\plain\f3\fs18\cf0 
\par \plain\f2\fs8\cf0 
\par \pard \keep \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  \plain\f3\fs18\cf0 Buttons\plain\f2\fs18\cf0 : TMsgDlgButtons;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 The Buttons property records the set of buttons that are to appear in the dialog box. This property is more flexible that the related {\strike ButtonGroup}{\v IDH_VMD_BUTTONGROUP} property - it supports additional buttons in any combination.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 Setting the Buttons property causes ButtonGroup to be updated. If the combination of buttons required is not supported by the ButtonGroup property, that property is set to \plain\f1\fs18\cf0\i bgUnknown\plain\f1\fs18\cf0 . Conversely setting the ButtonGroup property causes the Buttons property to be updated to the set of buttons in the selected group.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 The set of available buttons (TMsgDlgButtons) is defined in the Dialogs unit and is as follows:\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \pard \fi-1800 \li1800 \tx1800 \tx3600 \keep \plain\f0\fs18\cf0\b Value\plain\f0\fs18\cf0 \tab \plain\f1\fs18\cf0\b Button caption\tab ModalResult\plain\f0\fs18\cf0 
\par \pard \fi-1800 \li1800 \tx1800 \tx3600 \brdrt \brdrs \plain\f0\fs8\cf0  
\par \pard \fi-1800 \li1800 \tx1800 \tx3600 \keep \plain\f0\fs18\cf0 mbYes\tab \plain\f1\fs18\cf0 "Yes"\tab mrYes \plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i mbNo\plain\f0\fs18\cf0 \tab \plain\f1\fs18\cf0 "No"\tab mrNo\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i mbOK\plain\f0\fs18\cf0 \tab \plain\f1\fs18\cf0 "OK"\tab mrOK\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i mbCancel\plain\f0\fs18\cf0 \tab \plain\f1\fs18\cf0 "Cancel"\tab mrCancel
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0\i mbAbort\plain\f1\fs18\cf0 \tab "Abort"\tab mrAbort
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0\i mbRetry\plain\f1\fs18\cf0 \tab "Retry"\tab mrRetry
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0\i mbIgnore\plain\f1\fs18\cf0 \tab "Ignore"\tab mrIgnore
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0\i mbAll\plain\f1\fs18\cf0 \tab "All"\tab mrAll
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0\i mbNoToAll\plain\f1\fs18\cf0 \tab "No To All"\tab mrNoToAll
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0\i mbYesToAll\plain\f1\fs18\cf0 \tab "Yes To All"\tab mrYesToAll
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0\i mbHelp\plain\f1\fs18\cf0 \tab "Help"\tab N/a (doesn't close dialog)
\par \pard \fi-1800 \li1800 \tx1800 \brdrb \brdrs \plain\f0\fs8\cf0  
\par \pard 
\par \plain\f1\fs18\cf0 Note that if the {\strike Options}{\v IDH_VMD_OPTIONS} property includes \plain\f1\fs18\cf0\i mdoAutoHelpBtn\plain\f1\fs18\cf0  then the display of a help button depends only on the value of the {\strike HelpContext}{\v IDH_VMD_HELPCONTEXT} property - inclusion of \plain\f1\fs18\cf0\i mbHelp\plain\f1\fs18\cf0  in the Buttons property is ignored.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 Similarly if \plain\f1\fs18\cf0\i mdoInhibitCancel\plain\f1\fs18\cf0  is included in {\strike Options}{\v IDH_VMD_OPTIONS} a cancel button will never be displayed, regardless of whether \plain\f1\fs18\cf0\i mbCancel\plain\f1\fs18\cf0  is included in Buttons.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 Which button in the Buttons set is to be the default button is specified by the {\strike DefButton}{\v IDH_VMD_DEFBUTTON} property.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 Note that if no buttons are specified for display, or if any buttons specified in the Buttons property are inhibited by Options settings, then the dialog will display an OK button. The Help button is ignored when determining the above since it does not close the dialog, i.e. if only the Help button would be displayed then an OK button is also included.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 The default value of the property is \plain\f1\fs18\cf0\i [mbOK]\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_VMD_DEFBUTTON}
${\footnote {$}TPJVCLMsgDlg.DefButton}
K{\footnote {K}TPJVCLMsgDlg,DefButton;DefButton,TPJVCLMsgDlg;DefButton}
A{\footnote {A}TPJVCLMsgDlg_DefButton;DefButton_property;DefButton}
@{\footnote {@}Description of DefButton property introduced  in TPJVCLMsgDlg}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJVCLMsgDlg.DefButton
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJVCLMsgDlg}{\v IDH_VMD_CLASS}          {\strike See also}{\v !AL(TPJVCLMsgDlg_Buttons)}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Determines the \plain\f1\fs18\cf0 default \plain\f0\fs18\cf0 button in the dialog box .
\par 
\par \pard \fi-200 \li200 \plain\f2\fs18\cf0\b type\plain\f2\fs18\cf0  TMsgDlgButton\plain\f3\fs18\cf0  = mbYes, mbNo, mbOK, mbCancel, mbAbort,
\par   mbRetry, mbIgnore, mbAll, mbNoToAll, mbYesToAll, mbHelp);
\par \plain\f2\fs8\cf0 
\par \pard \keep \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  \plain\f3\fs18\cf0 DefButton\plain\f2\fs18\cf0 : TMsgDlgButton;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 The DefButton property selects the given button as the default button in the dialog. If the given button is not displayed in the dialog then the first (leftmost) button is selected.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 The meaning of the various buttons can be seen in the {\strike Buttons}{\v IDH_VMD_BUTTONS} property help topic. The set of available buttons (TMsgDlgButtons) is defined in the Dialogs unit.
\par \pard \fi-1800 \li1800 \tx1800 \plain\f1\fs8\cf0 
\par \pard \plain\f1\fs18\cf0 The default value of the property is \plain\f1\fs18\cf0\i mbOK.\plain\f1\fs18\cf0  \plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_VMD_HELPCONTEXT}
${\footnote {$}TPJVCLMsgDlg.HelpContext}
K{\footnote {K}TPJVCLMsgDlg,HelpContext;HelpContext,TPJVCLMsgDlg;HelpContext}
A{\footnote {A}TPJVCLMsgDlg_HelpContext;HelpContext_property;HelpContext}
@{\footnote {@}Description of the inherited HelpContext property from the perspective of TPJVCLMsgDlg}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJVCLMsgDlg.HelpContext
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJVCLMsgDlg}{\v IDH_VMD_CLASS}\plain\f1\fs18\cf0           {\strike See also}{\v !AL(TPJVCLMsgDlg_HelpFile;TPJVCLMsgDlg_OnHelp;TPJVCLMsgDlg_Buttons;TPJVCLMsgDlg_Options)}\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Specifies the context number for online Help.
\par 
\par \pard \keep \plain\f2\fs18\cf0\b type \plain\f2\fs18\cf0 THelpContext = -MaxLongInt..MaxLongInt;
\par \plain\f2\fs8\cf0\b 
\par \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  HelpContext: THelpContext;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Set the HelpContext property to the help context nunber of the relevant topic in the help file\plain\f1\fs18\cf0  determined by the {\strike HelpFile}{\v IDH_VMD_HELPFILE} property\plain\f0\fs18\cf0 .\plain\f1\fs18\cf0  This topic is accessed when the user presses F1 in the dialog box or clicks any help button that is displayed.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 There are two ways the dialog can display a help button that accesses the help topic:
\par \plain\f1\fs8\cf0 
\par \pard \fi-400 \li400 \tx400 \plain\f1\fs18\cf0 1)\tab By including \plain\f1\fs18\cf0\i mbHelp\plain\f1\fs18\cf0  in the {\strike Buttons}{\v IDH_VMD_BUTTONS} set property\plain\f0\fs18\cf0 .
\par \plain\f1\fs18\cf0 2)\tab By setting the \plain\f1\fs18\cf0\i mdoAutoHelpBtn\plain\f1\fs18\cf0  value of the {\strike Options}{\v IDH_VMD_OPTIONS} set property.\plain\f0\fs18\cf0 
\par \pard \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0\b Note:\plain\f1\fs18\cf0  the help file must contain a topic with a matching context number.\plain\f0\fs18\cf0 
\par 
\par \plain\f0\fs20\cf0 
\par \page 
#{\footnote {#}IDH_VMD_HELPFILE}
${\footnote {$}TPJVCLMsgDlg.HelpFile}
K{\footnote {K}TPJVCLMsgDlg,HelpFile;HelpFile,TPJVCLMsgDlg;HelpFile}
A{\footnote {A}TPJVCLMsgDlg_HelpFile;HelpFile_property;HelpFile}
@{\footnote {@}Description of the inherited HelpFile property from the perspective of TPJVCLMsgDlg}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJVCLMsgDlg.HelpFile
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJVCLMsgDlg}{\v IDH_VMD_CLASS}\plain\f1\fs18\cf0           {\strike See also}{\v !AL(TPJVCLMsgDlg_HelpContext;TPJVCLMsgDlg_OnHelp)}\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Specifies the \plain\f1\fs18\cf0 file to use for online\plain\f0\fs18\cf0  Help.
\par 
\par \pard \keep \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  HelpFile: \plain\f3\fs18\cf0\b string\plain\f2\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Set the HelpFile\plain\f1\fs18\cf0  \plain\f0\fs18\cf0 property to \plain\f1\fs18\cf0 specify the help file to be used when a Help button is clicked or F1 is pressed in the dialog. If HelpFile is set to the empty string then the help file associated with the parent form or application is used.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 The {\strike HelpContext}{\v IDH_VMD_HELPCONTEXT} property is used to specify the help topic to be displayed. Therefore the specified help file should contain a topic with the appropriate context number.\plain\f0\fs20\cf0 
\par \page 
#{\footnote {#}IDH_VMD_ICONRESOURCE}
${\footnote {$}TPJVCLMsgDlg.IconResource}
K{\footnote {K}TPJVCLMsgDlg,IconResource;IconResource,TPJVCLMsgDlg;IconResource}
A{\footnote {A}TPJVCLMsgDlg_IconResource;IconResource_property;IconResource}
@{\footnote {@}Description of the inherited IconResource property from the perspective of TPJVCLMsgDlg}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJVCLMsgDlg.IconResource
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJVCLMsgDlg}{\v IDH_VMD_CLASS}          {\strike See also}{\v !AL(TPJVCLMsgDlg_Kind;TPJVCLMsgDlg_Options)}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Specifies the resource containing the dialog box's icon.
\par 
\par \pard \keep \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  IconResource: \plain\f2\fs18\cf0\b string\plain\f2\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Set IconResource to identify the resource to be used to display a user defined icon in the dialog box. \plain\f1\fs18\cf0 If IconResource is left blank then the default resource name "MAINICON"* is used. \plain\f0\fs18\cf0 The icon resource must be contained in the executable file. If the \plain\f1\fs18\cf0 such a\plain\f0\fs18\cf0  resource cannot be found then no icon is displayed\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 The \plain\f0\fs18\cf0 {\strike Kind}{\v IDH_VMD_KIND} \plain\f1\fs18\cf0 property \plain\f0\fs18\cf0 must be set to \plain\f0\fs18\cf0\i m\plain\f1\fs18\cf0\i k\plain\f0\fs18\cf0\i User\plain\f0\fs18\cf0  \plain\f1\fs18\cf0 and \plain\f0\fs18\cf0\i mdoShowCustomIcon\plain\f1\fs18\cf0  must be included in the set of {\strike Options}{\v IDH_VMD_OPTIONS} in order \plain\f0\fs18\cf0 to display a user defined icon. IconResource is ignored if Kind has any other value\plain\f1\fs18\cf0  or if the required option is not set.\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \pard \fi-800 \li800 \tx800 \plain\f1\fs18\cf0\b Note 1:\plain\f1\fs18\cf0  *\tab MAINICON is the resource name of the application's main icon in Delphi.
\par \plain\f1\fs18\cf0\b Note 2:\plain\f1\fs18\cf0 \tab To reference an icon resource with a numeric id (rather than a string name) preceed the numeric value by a '#' character.\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_VMD_KIND}
${\footnote {$}TPJVCLMsgDlg.Kind}
K{\footnote {K}TPJVCLMsgDlg,Kind;Kind,TPJVCLMsgDlg;Kind}
A{\footnote {A}TPJVCLMsgDlg_Kind;Kind_property;Kind}
@{\footnote {@}Description of the inherited Kind property from the perspective of TPJVCLMsgDlg}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJVCLMsgDlg.Kind
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJVCLMsgDlg}{\v IDH_VMD_CLASS}          {\strike See also}{\v !AL(TPJVCLMsgDlg_Title;TPJVCLMsgDlg_IconResource;TPJVCLMsgDlg_MakeSound;TPJVCLMsgDlg_Options)}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Determines the \plain\f1\fs18\cf0 attributes of the \plain\f0\fs18\cf0 dialog box\plain\f1\fs18\cf0  that is displayed.\plain\f0\fs18\cf0 
\par 
\par \pard \fi-200 \li200 \plain\f2\fs18\cf0\b type\plain\f2\fs18\cf0  TPJMsgDlgKind= (m\plain\f3\fs18\cf0 k\plain\f2\fs18\cf0 Warning, m\plain\f3\fs18\cf0 k\plain\f2\fs18\cf0 Information, m\plain\f3\fs18\cf0 k\plain\f2\fs18\cf0 Query, m\plain\f3\fs18\cf0 k\plain\f2\fs18\cf0 Error, m\plain\f3\fs18\cf0 k\plain\f2\fs18\cf0 User\plain\f3\fs18\cf0 , mkApplication, mkWinLogo\plain\f2\fs18\cf0 );
\par \pard \plain\f2\fs8\cf0 
\par \pard \keep \plain\f2\fs18\cf0\b property \plain\f2\fs18\cf0 Kind: TPJMsgDlgKind;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Set this property to \plain\f1\fs18\cf0 determine the appearance and other attributes of the dialog box.\plain\f0\fs18\cf0  \plain\f1\fs18\cf0 The property specifies the \plain\f0\fs18\cf0 icon \plain\f1\fs18\cf0 that \plain\f0\fs18\cf0 will appear in the dialog box\plain\f1\fs18\cf0 , the default window title and any sound played when the dialog box appears.\plain\f0\fs18\cf0  The default window title can be overridden using the {\strike Title}{\v IDH_VMD_TITLE} property and sounds are only played when {\strike MakeSound}{\v IDH_VMD_MAKESOUND} is True.
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 The effect of each of the possible\plain\f1\fs18\cf0  values of the Kind property\plain\f0\fs18\cf0  are described below:
\par \plain\f0\fs8\cf0 
\par \pard \fi-3200 \li3200 \tx1600 \tx3200 \tx4800 \keep \plain\f0\fs18\cf0\b Value\tab Icon\tab Default title\tab System Sound\plain\f0\fs18\cf0 
\par \pard \fi-3200 \li3200 \tx1600 \tx3200 \tx4800 \keep \brdrt \brdrs \plain\f0\fs8\cf0  
\par \pard \fi-3200 \li3200 \tx1600 \tx3200 \tx4800 \keep \plain\f0\fs18\cf0\i m\plain\f1\fs18\cf0\i k\plain\f0\fs18\cf0\i Warning\plain\f0\fs18\cf0 \tab \{bmct IDIExclamation.bmp\}\tab "Warning"\tab MB_ICONEXCLAMATION
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i m\plain\f1\fs18\cf0\i k\plain\f0\fs18\cf0\i Information\plain\f0\fs18\cf0 \tab \{bmct IDIAsterisk.bmp\}\tab "Information"\tab MB_ICONASTERISK
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i m\plain\f1\fs18\cf0\i k\plain\f0\fs18\cf0\i Query\plain\f0\fs18\cf0 \tab \{bmct IDIQuestion.bmp\}\tab "Confirm"\tab MB_ICONQUESTION
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i m\plain\f1\fs18\cf0\i k\plain\f0\fs18\cf0\i Error\plain\f0\fs18\cf0 \tab \{bmct IDIHand.bmp\}\tab "Error"\tab MB_ICONHAND
\par \plain\f0\fs26\cf0 
\par \plain\f0\fs18\cf0\i m\plain\f1\fs18\cf0\i k\plain\f0\fs18\cf0\i User\plain\f0\fs18\cf0 \tab IconResource *\tab Application.Title **\tab MB_OK
\par \plain\f0\fs26\cf0 
\par \plain\f0\fs18\cf0\i mkApplication\plain\f0\fs18\cf0 \tab \{bmct IDIApplication.bmp\}\tab Application.Title **\tab MB_OK
\par \plain\f0\fs26\cf0 
\par \plain\f0\fs18\cf0\i mkWinLogo\plain\f0\fs18\cf0 \tab \{bmct IDIWinLogo.bmp\}\tab Application.Title **\tab MB_OK
\par 
\par \pard \fi-3200 \li3200 \tx1600 \tx3200 \tx4800 \keep \brdrb \brdrs \plain\f0\fs8\cf0  
\par \pard \fi-300 \li300 \tx300 \plain\f0\fs18\cf0 *\tab Icon is loaded from the resource specified by the {\strike IconResource}{\v IDH_VMD_ICONRESOURCE} property\plain\f1\fs18\cf0  providing that \plain\f0\fs18\cf0\i mdoShowCustomIcon\plain\f1\fs18\cf0  is included in the {\strike Options}{\v IDH_VMD_OPTIONS} set.\plain\f0\fs18\cf0 
\par **\tab The default title is set to the same value as the {\strike Application}{\v !AL(TApplication_object,1)} object's {\strike Title}{\v !AL(TApplication_Title,1)} property.
\par \pard \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 The default value of the property is\plain\f0\fs18\cf0  \plain\f0\fs18\cf0\i m\plain\f1\fs18\cf0\i k\plain\f0\fs18\cf0\i Information\plain\f0\fs18\cf0 .
\par \page 
#{\footnote {#}IDH_VMD_MAKESOUND}
${\footnote {$}TPJVCLMsgDlg.MakeSound}
K{\footnote {K}TPJVCLMsgDlg,MakeSound;MakeSound,TPJVCLMsgDlg;MakeSound}
A{\footnote {A}TPJVCLMsgDlg_MakeSound;MakeSound_property;MakeSound}
@{\footnote {@}Description of the inherited MakeSound property from the perspective of TPJVCLMsgDlg}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJVCLMsgDlg.MakeSound
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJVCLMsgDlg}{\v IDH_VMD_CLASS}          {\strike See also}{\v !AL(TPJVCLMsgDlg_Kind)}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Flag that determines if a sound will be emitted when the dialog box is display\plain\f1\fs18\cf0 ed\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  MakeSound: Boolean;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Set MakeSound to true to play a sound when the dialog appears. If MakeSound is false then no sound is played.
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 The sound played is one of the standard system sounds. Which sound is used depends on the value of the {\strike Kind}{\v IDH_VMD_KIND} property.
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 The property's default value is \plain\f1\fs18\cf0\i False\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_VMD_OFFSETLEFT}
${\footnote {$}TPJVCLMsgDlg.OffsetLeft}
K{\footnote {K}TPJVCLMsgDlg,OffsetLeft;OffsetLeft,TPJVCLMsgDlg;OffsetLeft}
A{\footnote {A}TPJVCLMsgDlg_OffsetLeft;OffsetLeft_property;OffsetLeft}
@{\footnote {@}Description of OffsetLeft property introduced  in TPJVCLMsgDlg}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJVCLMsgDlg.OffsetLeft
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJVCLMsgDlg}{\v IDH_VMD_CLASS}          {\strike See also}{\v !AL(TPJVCLMsgDlg_Align;TPJVCLMsgDlg_OffsetTop)}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Determines the \plain\f1\fs18\cf0 offset of the \plain\f0\fs18\cf0 dialog box\plain\f1\fs18\cf0  form left of screen or form\plain\f0\fs18\cf0 .
\par \pard \fi-200 \li200 \plain\f2\fs18\cf0 
\par \pard \keep \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  \plain\f3\fs18\cf0 OffsetLeft\plain\f2\fs18\cf0 : \plain\f3\fs18\cf0 Integer\plain\f2\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 OffsetLeft defines the distance in pixels that the dialog box is offset from either the owning form or screen, when the {\strike Align}{\v IDH_VMD_ALIGN} property is either \plain\f1\fs18\cf0\i mdaScreenOffset\plain\f1\fs18\cf0  or \plain\f1\fs18\cf0\i mdaFormOffset\plain\f1\fs18\cf0 . When Align is \plain\f1\fs18\cf0\i mdaScreenCentre\plain\f1\fs18\cf0  or \plain\f1\fs18\cf0\i mdaFormCentre\plain\f1\fs18\cf0  the value of the OffsetLeft property is ignored. OffsetLeft is usually used in conjunction with {\strike OffsetTop}{\v IDH_VMD_OFFSETTOP}.
\par \pard \fi-1800 \li1800 \tx1800 \plain\f1\fs8\cf0 
\par \pard \plain\f1\fs18\cf0 The default value of the property is \plain\f1\fs18\cf0\i 0.\plain\f1\fs18\cf0  \plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_VMD_OFFSETTOP}
${\footnote {$}TPJVCLMsgDlg.OffsetTop}
K{\footnote {K}TPJVCLMsgDlg,OffsetTop;OffsetTop,TPJVCLMsgDlg;OffsetTop}
A{\footnote {A}TPJVCLMsgDlg_OffsetTop;OffsetTop_property;OffsetTop}
@{\footnote {@}Description of OffsetTop property introduced  in TPJVCLMsgDlg}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJVCLMsgDlg.OffsetTop
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJVCLMsgDlg}{\v IDH_VMD_CLASS}          {\strike See also}{\v !AL(TPJVCLMsgDlg_Align;TPJVCLMsgDlg_OffsetLeft)}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Determines the \plain\f1\fs18\cf0 offset of the \plain\f0\fs18\cf0 dialog box\plain\f1\fs18\cf0  form top of screen or form\plain\f0\fs18\cf0 .
\par \pard \fi-200 \li200 \plain\f2\fs18\cf0 
\par \pard \keep \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  \plain\f3\fs18\cf0 OffsetTop\plain\f2\fs18\cf0 : \plain\f3\fs18\cf0 Integer\plain\f2\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 OffsetTop defines the distance in pixels that the dialog box is offset from either top of the owning form or screen, when the {\strike Align}{\v IDH_VMD_ALIGN} property is either \plain\f1\fs18\cf0\i mdaScreenOffset\plain\f1\fs18\cf0  or \plain\f1\fs18\cf0\i mdaFormOffset\plain\f1\fs18\cf0 . When Align is \plain\f1\fs18\cf0\i mdaScreenCentre\plain\f1\fs18\cf0  or \plain\f1\fs18\cf0\i mdaFormCentre\plain\f1\fs18\cf0  the value of the OffsetTop property is ignored. OffsetTop is usually used in conjunction with {\strike OffsetLeft}{\v IDH_VMD_OFFSETLEFT}.
\par \pard \fi-1800 \li1800 \tx1800 \plain\f1\fs8\cf0 
\par \pard \plain\f1\fs18\cf0 The default value of the property is \plain\f1\fs18\cf0\i 0.\plain\f1\fs18\cf0  \plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_VMD_OPTIONS}
${\footnote {$}TPJVCLMsgDlg.Options}
K{\footnote {K}TPJVCLMsgDlg,Options;Options,TPJVCLMsgDlg;Options}
A{\footnote {A}TPJVCLMsgDlg_Options;Options_property;Options}
@{\footnote {@}Description of Options property introduced  in TPJVCLMsgDlg}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJVCLMsgDlg.Options
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJVCLMsgDlg}{\v IDH_VMD_CLASS}          \plain\f1\fs18\cf0 {\strike See also}{\v !AL(TPJVCLMsgDlg_Buttons;TPJVCLMsgDlg_HelpContext;TPJVCLMsgDlg_Kind;TPJVCLMsgDlg_IconResource)}\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Property that records various customisation options\plain\f0\fs18\cf0 .
\par 
\par \pard \fi-200 \li200 \plain\f3\fs18\cf0\b type\plain\f3\fs18\cf0  TPJMsgDlgOption = (mdoInhibitCancel,
\par   mdoAutoHelpBtn, mdoShowCustomIcon);
\par \plain\f2\fs8\cf0\b 
\par \plain\f2\fs18\cf0\b type\plain\f2\fs18\cf0  TPJMsgDlgOptions = \plain\f2\fs18\cf0\b set of\plain\f2\fs18\cf0  TPJMsgDlgOption;\plain\f3\fs18\cf0 
\par \plain\f2\fs8\cf0 
\par \pard \keep \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  \plain\f3\fs18\cf0 Options\plain\f2\fs18\cf0 : TPJMsgDlgOptions;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 The Options set property stores a series of (unrelated) options that are used to customise the dialog box. The various options are described below\plain\f0\fs18\cf0 :
\par \plain\f0\fs8\cf0 
\par \pard \fi-2200 \li2200 \tx2200 \plain\f0\fs18\cf0\b Value\plain\f0\fs18\cf0 \tab \plain\f1\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \pard \fi-2200 \li2200 \tx2200 \brdrt \brdrs \plain\f0\fs8\cf0  
\par \pard \fi-2200 \li2200 \tx2200 \plain\f0\fs18\cf0\i mdoInhibitCancel\plain\f0\fs18\cf0 \tab \plain\f1\fs18\cf0 When included in Options this value causes a dialog to be displayed that can't be cancelled. This is done by:
\par \pard \fi-400 \li2600 \tx2600 \plain\f5\fs18\cf0 \'A7\plain\f1\fs18\cf0 \tab Ignoring any request to display a cancel button.
\par \plain\f5\fs18\cf0 \'A7\plain\f1\fs18\cf0 \tab Removing system menu from dialog.
\par \plain\f5\fs18\cf0 \'A7\plain\f1\fs18\cf0 \tab Rejecting ESC key presses.\plain\f0\fs18\cf0 
\par \pard \fi-2200 \li2200 \tx2200 \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i mdoAutoHelpBtn\plain\f0\fs18\cf0 \tab \plain\f1\fs18\cf0 This option causes the dialog to display a help button when the {\strike HelpContext}{\v IDH_VMD_HELPCONTEXT} is non-zero and to hide the help button when HelpContext is 0. This setting overrides any help button that may have been requested using the {\strike Buttons}{\v IDH_VMD_BUTTONS} property.\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0\i mdoShowCustomIcon\plain\f0\fs18\cf0 \tab \plain\f1\fs18\cf0 This option only has an effect when {\strike Kind}{\v IDH_VMD_KIND} is \plain\f1\fs18\cf0\i mkUser.\plain\f1\fs18\cf0  When set the option causes the the dialog box to display the icon specified by the {\strike IconResource}{\v IDH_VMD_ICONRESOURCE} property. When not set no icon is displayed.\plain\f0\fs18\cf0 
\par \pard \fi-2200 \li2200 \tx2200 \brdrb \brdrs \plain\f0\fs8\cf0  
\par \pard 
\par \plain\f1\fs18\cf0 The default value of the property is \plain\f1\fs18\cf0\i [mdoAutoHelpBtn, mdoShowCustomIcon]\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_VMD_TEXT}
${\footnote {$}TPJVCLMsgDlg.Text}
K{\footnote {K}TPJVCLMsgDlg,Text;Text,TPJVCLMsgDlg;Text}
A{\footnote {A}TPJVCLMsgDlg_Text;Text_property;Text}
@{\footnote {@}Description of the inherited Text property from the perspective of TPJVCLMsgDlg}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJVCLMsgDlg.Text
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJVCLMsgDlg}{\v IDH_VMD_CLASS}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard The text that is displayed in the dialog box.
\par 
\par \pard \keep \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  Text: \plain\f2\fs18\cf0\b string\plain\f2\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Set this property to the text that you wish to display in the body on the dialog box. The default is to display nothing.
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0\b Note:\plain\f1\fs18\cf0  Line breaks in the dialog box can be forced by including CR LF pairs in the Text string. This can't be done at design time using the standard Delphi string property editor. However an {\strike Extended String Property Editor}{\v IDH_EXTSTRPROPED} can be installed to enable multiple lines of text to be assigned at design time.\plain\f0\fs18\cf0 
\par \plain\f0\fs20\cf0 
\par \page 
#{\footnote {#}IDH_VMD_TITLE}
${\footnote {$}TPJVCLMsgDlg.Title}
K{\footnote {K}TPJVCLMsgDlg,Title;Title,TPJVCLMsgDlg;Title}
A{\footnote {A}TPJVCLMsgDlg_Title;Title_property;Title}
@{\footnote {@}Description of the inherited Title property from the perspective of TPJVCLMsgDlg}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJVCLMsgDlg.Title
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJVCLMsgDlg}{\v IDH_VMD_CLASS}          {\strike See also}{\v !AL(TPJVCLMsgDlg_Kind)}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard The dialog box's window title.
\par 
\par \pard \keep \plain\f2\fs18\cf0\b type\plain\f2\fs18\cf0  TCaption = \plain\f2\fs18\cf0\b type string\plain\f2\fs18\cf0 ;
\par \plain\f2\fs8\cf0 
\par \plain\f2\fs18\cf0\b property\plain\f2\fs18\cf0  Title: TCaption;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Set this property to the string that should be displayed as the dialog box window title. Leaving this property \plain\f1\fs18\cf0 empty\plain\f0\fs18\cf0  causes a default title to be displayed, which depends on the value of the {\strike Kind}{\v IDH_VMD_KIND} property.
\par \plain\f0\fs20\cf0 
\par \page 
#{\footnote {#}IDH_VMD_METHODS}
${\footnote {$}TPJVCLMsgDlg methods}
@{\footnote {@}List of methods implemented by TPJVCLMsgDlg}

\pard \plain \plain\f0\fs18\cf0\b Methods\plain\f0\fs18\cf0 
\par \pard \tx400 
\par \plain\f1\fs18\cf0 \tab {\strike CreateDialog}{\v IDH_VMD_CREATEDIALOG}\plain\f0\fs18\cf0 
\par \tab {\strike Execute}{\v IDH_VMD_EXECUTE}
\par 
\par \pard \tx200 TPJVCLMsgDlg\plain\f1\fs18\cf0  \plain\f0\fs18\cf0 also inherits methods from {\strike TComponent}{\v !AL(TComponent_object,1)}.
\par \page 
#{\footnote {#}IDH_VMD_CREATEDIALOG}
${\footnote {$}TPJVCLMsgDlg.CreateDialog}
K{\footnote {K}TPJVCLMsgDlg,CreateDialog;CreateDialog,TPJVCLMsgDlg;CreateDialog}
A{\footnote {A}TPJVCLMsgDlg_CreateDialog;CreateDialog_property;CreateDialog}
@{\footnote {@}Description of the CreateDialog method introduced by TPJVCLMsgDlg}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJVCLMsgDlg.CreateDialog
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJVCLMsgDlg}{\v IDH_VMD_CLASS}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Creates instance of \plain\f0\fs18\cf0  the dialog box\plain\f1\fs18\cf0  and returns it.\plain\f0\fs18\cf0 
\par 
\par \pard \keep \plain\f2\fs18\cf0\b function\plain\f2\fs18\cf0  \plain\f3\fs18\cf0 CreateDialog\plain\f2\fs18\cf0 : \plain\f3\fs18\cf0 TForm\plain\f2\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 The CreateDialog method creates an instance of a dialog box and returns it. This instance is customised according to the component's properties. However, no sound is played by this method regardless of the state of the {\strike MakeSound}{\v IDH_VMD_MAKESOUND} property.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 Note that the method's caller is responsible for showing and freeing dialog box instances created by this method.\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_VMD_EXECUTE}
${\footnote {$}TPJVCLMsgDlg.Execute}
K{\footnote {K}TPJVCLMsgDlg,Execute;Execute,TPJVCLMsgDlg;Execute}
A{\footnote {A}TPJVCLMsgDlg_Execute;Execute_property;Execute}
@{\footnote {@}Description of the inherited Execute method from perspective of TPJVCLMsgDlg}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJVCLMsgDlg.Execute
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJVCLMsgDlg}{\v IDH_VMD_CLASS}          {\strike See also}{\v !AL(TPJVCLMsgDlg_ButtonGroup;TPJVCLMsgDlg_Buttons)}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard Displays the dialog box\plain\f1\fs18\cf0  and returns information about the button pressed to close it\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f2\fs18\cf0\b function\plain\f2\fs18\cf0  Execute: Integer;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Call Execute to display the dialog box. Execute returns a value associated with the button that was clicked to close the dialog box\plain\f1\fs18\cf0 . These values are listed in a table in the {\strike Buttons}{\v IDH_VMD_BUTTONS} help topic.\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Use the {\strike ButtonGroup}{\v IDH_VMD_BUTTONGROUP} \plain\f1\fs18\cf0 or {\strike Buttons}{\v IDH_VMD_BUTTONS} \plain\f0\fs18\cf0 propert\plain\f1\fs18\cf0 ies\plain\f0\fs18\cf0  to determine which buttons are displayed in the dialog box. The return values are defined in the \plain\f1\fs18\cf0 Controls\plain\f0\fs18\cf0  unit.\plain\f1\fs18\cf0  The return values for buttons that are common both to Windows and the Delphi Controls unit and the same - i.e. the Delphi constants representing theses values map onto those defined by Windows. The possible return values of the various buttons are:
\par \plain\f1\fs8\cf0 
\par \pard \tx1600 \tx3200 \keep \plain\f0\fs18\cf0\b Button clicked\tab Return value\plain\f1\fs18\cf0\b \tab Windows Equivalent\plain\f1\fs18\cf0 
\par \pard \tx1600 \tx3200 \brdrt \brdrs \plain\f1\fs8\cf0  
\par \pard \tx1600 \tx3200 \keep \plain\f1\fs18\cf0 Yes\tab \plain\f1\fs18\cf0\i mrYes\plain\f1\fs18\cf0 \tab \plain\f1\fs18\cf0\i IDYES\plain\f1\fs18\cf0 
\par No\tab \plain\f1\fs18\cf0\i mrNo\plain\f1\fs18\cf0 \tab \plain\f1\fs18\cf0\i IDNO\plain\f1\fs18\cf0 
\par OK\tab \plain\f1\fs18\cf0\i mrOK\plain\f1\fs18\cf0 \tab \plain\f1\fs18\cf0\i IDOK\plain\f1\fs18\cf0 
\par Cancel\tab \plain\f1\fs18\cf0\i mrCancel\plain\f1\fs18\cf0 \tab \plain\f1\fs18\cf0\i IDCANCEL\plain\f1\fs18\cf0 
\par Abort\tab \plain\f1\fs18\cf0\i mrAbort\plain\f1\fs18\cf0 \tab \plain\f1\fs18\cf0\i IDABORT\plain\f1\fs18\cf0 
\par Retry\tab \plain\f1\fs18\cf0\i mrRetry\plain\f1\fs18\cf0 \tab \plain\f1\fs18\cf0\i IDRETRY
\par \plain\f1\fs18\cf0 Ignore\tab \plain\f1\fs18\cf0\i mrIgnore\plain\f1\fs18\cf0 \tab \plain\f1\fs18\cf0\i IDIGNORE\plain\f1\fs18\cf0 
\par All\tab \plain\f1\fs18\cf0\i mrAll\plain\f1\fs18\cf0 \tab N/a
\par NoToAll\tab \plain\f1\fs18\cf0\i mrNoToAll\plain\f1\fs18\cf0 \tab N/a
\par YesToAll\tab \plain\f1\fs18\cf0\i mrYesToAll\plain\f1\fs18\cf0 \tab N/a
\par Help\tab N/a (doesn't close dialog)
\par Close *\tab \plain\f1\fs18\cf0\i mrClose\plain\f1\fs18\cf0 \tab N/a
\par \pard \tx1600 \tx3200 \brdrb \brdrs \plain\f1\fs8\cf0  \plain\f0\fs8\cf0 
\par \pard \tx1600 \tx3200 
\par \plain\f1\fs18\cf0 * Supported on later Delphi's only.\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_VMD_EVENTS}
${\footnote {$}TPJVCLMsgDlg events}
@{\footnote {@}List of events implemented by TPJVCLMsgDlg}

\pard \plain \plain\f1\fs18\cf0\b Events\plain\f0\fs18\cf0 
\par \pard \tx400 
\par \tab {\strike OnHelp}{\v IDH_VMD_ONHELP}
\par \plain\f1\fs18\cf0 \tab {\strike OnHide}{\v IDH_VMD_ONHIDE}
\par \tab {\strike OnShow}{\v IDH_VMD_ONSHOW}\plain\f0\fs18\cf0 
\par 
\par \page 
#{\footnote {#}IDH_VMD_ONHELP}
${\footnote {$}TPJVCLMsgDlg.OnHelp}
K{\footnote {K}TPJVCLMsgDlg,OnHelp;OnHelp,TPJVCLMsgDlg;OnHelp}
A{\footnote {A}TPJVCLMsgDlg_OnHelp;OnHelp_event;OnHelp}
@{\footnote {@}Description of the inherited OnHelp event from perspective of TPJVCLMsgDlg}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJVCLMsgDlg.\plain\f1\fs22\cf2\b OnHelp\plain\f0\fs22\cf2\b 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJVCLMsgDlg}{\v IDH_VMD_CLASS}\plain\f1\fs18\cf0           {\strike See also}{\v !AL(TPJVCLMsgDlg_HelpFile;TPJVCLMsgDlg_HelpContext)}\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Event triggered when a user requests help in a dialog box\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f3\fs18\cf0\b property\plain\f2\fs18\cf0  \plain\f3\fs18\cf0 OnHelp\plain\f2\fs18\cf0 : {\strike TNotifyEvent}{\v !AL(TNotifyEvent,1)};
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 The OnHelp event is triggered when the user requests help in a dialog either by clicking a help button or by pressing F1. If OnHelp is handled then the component's default help processing is inhibited - the event handler must display the required help.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 This event is never triggered if the dialog box does not display a help button. F1 keypresses are ignored if there is no Help Button.\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_VMD_ONHIDE}
${\footnote {$}TPJVCLMsgDlg.OnHide}
K{\footnote {K}TPJVCLMsgDlg,OnHide;OnHide,TPJVCLMsgDlg;OnHide}
A{\footnote {A}TPJVCLMsgDlg_OnHide;OnHide_event;OnHide}
@{\footnote {@}Description of  OnHide event of TPJVCLMsgDlg}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJVCLMsgDlg.\plain\f1\fs22\cf2\b OnHide\plain\f0\fs22\cf2\b 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJVCLMsgDlg}{\v IDH_VMD_CLASS}\plain\f1\fs18\cf0           {\strike See also}{\v !AL(TPJVCLMsgDlg_OnShow)}          {\strike Examples}{\v IDH_VMD_CUSTOMISATION}\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Event triggered just after the component's dialog box is hidden\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f3\fs18\cf0\b type \plain\f3\fs18\cf0 TPJVCLMsgDlgFormEvent = \plain\f3\fs18\cf0\b procedure\plain\f3\fs18\cf0 (Sender: TObject;
\par   Dlg: TForm) \plain\f3\fs18\cf0\b of object\plain\f3\fs18\cf0 ;
\par \plain\f3\fs8\cf0\b 
\par \plain\f3\fs18\cf0\b property\plain\f2\fs18\cf0  \plain\f3\fs18\cf0 OnHide\plain\f2\fs18\cf0 : \plain\f3\fs18\cf0 TPJVCLMsgDlgFormEvent\plain\f2\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 The OnShow event is triggered just after the component's dialog box is hidden when it is closed. A reference the component itself is passed to the event handler's Sender parameter while the Dlg parameter references the dialog box form.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 The Dlg parameter can be used to tidy up any customisation performed in the {\strike OnShow}{\v IDH_VMD_ONSHOW} event handler. Most customisations do not need to be todied up, but the handler has uses on occasions where there may be results to be read from customisations or where any non-component objects created in OnShow need to be freed.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0\b Warning: \plain\f1\fs18\cf0 The form referenced by the Dlg parameter is destroyed shortly after OnHide returns, so should not be referenced after the handler has completed. The form reference is the same one that is provided to the OnShow event handler.\plain\f1\fs8\cf0 
\par \page 
#{\footnote {#}IDH_VMD_ONSHOW}
${\footnote {$}TPJVCLMsgDlg.OnShow}
K{\footnote {K}TPJVCLMsgDlg,OnShow;OnShow,TPJVCLMsgDlg;OnShow}
A{\footnote {A}TPJVCLMsgDlg_OnShow;OnShow_event;OnShow}
@{\footnote {@}Description of the OnShow event of TPJVCLMsgDlg}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b TPJVCLMsgDlg.\plain\f1\fs22\cf2\b OnShow\plain\f0\fs22\cf2\b 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJVCLMsgDlg}{\v IDH_VMD_CLASS}\plain\f1\fs18\cf0           {\strike See also}{\v !AL(TPJVCLMsgDlg_OnHide)}          {\strike Examples}{\v IDH_VMD_CUSTOMISATION}\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Event triggered just before the component's dialog box is displayed\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f3\fs18\cf0\b type \plain\f3\fs18\cf0 TPJVCLMsgDlgFormEvent = \plain\f3\fs18\cf0\b procedure\plain\f3\fs18\cf0 (Sender: TObject;
\par   Dlg: TForm) \plain\f3\fs18\cf0\b of object\plain\f3\fs18\cf0 ;
\par \plain\f3\fs8\cf0\b 
\par \plain\f3\fs18\cf0\b property\plain\f2\fs18\cf0  \plain\f3\fs18\cf0 OnShow\plain\f2\fs18\cf0 : \plain\f3\fs18\cf0 TPJVCLMsgDlgFormEvent\plain\f2\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 The OnShow event is triggered just before the component's dialog box is displayed. A reference the component itself is passed to the event handler's Sender parameter while the Dlg parameter references the dialog box form.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 The Dlg parameter can be used to customise the appearance of the dialog box. Any tidying up of customisation or any interpretation of the results of the customisation can be carried out by handling the {\strike OnHide}{\v IDH_VMD_ONHIDE} event.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0\b Warning 1: \plain\f1\fs18\cf0 The form referenced by the Dlg parameter is only valid while the dialog box is displayed - it is destroyed when the dialog is closed. It is safe to use the form reference during the OnShow event handler and up until the OnHide event handler returns.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0\b Warning 2:\plain\f1\fs18\cf0  Having access to the dialog's control means you can potentially cause havoc in the implementation of the dialog itself. This particularly applies if you try to change event handlers of the dialog form or its contained controls, because the component uses some event handlers itself. Therefore if you want to change any event handlers remember to store the original event handler, assign your new one and then call the original handler (if assigned) from your code. See {\strike Customising the TPJVCLMsgDlg component}{\v IDH_VMD_CUSTOMISATION} for an example of how to work with event handlers.\plain\f1\fs18\cf0\b 
\par \page 
#{\footnote {#}IDH_VMD_CUSTOMISATION}
${\footnote {$}TPJVCLMsgDlg customisation}
K{\footnote {K}customising TPJVCLMsgDlg dialog;TPJVCLMsgDlg,customisation}
@{\footnote {@}Description of how to customise the dialog displayed by the TPJVCLMsgDlg component}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f1\fs22\cf2\b Customising the TPJVCLMsgDlg component\plain\f0\fs22\cf2\b 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 If the customisation features provided by {\strike TPJVCLMsgDlg}{\v IDH_VMD_CLASS} are not sufficient you can further customise the dialog by directly altering the dialog box form's properties. This is done by handling the component's {\strike OnShow}{\v IDH_VMD_ONSHOW} event. Occasionally you will also need to handle the {\strike OnHide}{\v IDH_VMD_ONHIDE} event.
\par \plain\f1\fs12\cf0 
\par \plain\f1\fs18\cf0\b Example 1 - Changing the dialog box color\plain\f1\fs18\cf0 
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 If you wish to change the color of the dialog box, simply handle the OnShow event and set the dialog box's Color property to the deisred colour. Assuming you have dropped a TPJVCLMsgDlg component on a form, double click the component's OnShow event in the Object Inspector and enter the following code to set the dialog form to red:
\par \plain\f1\fs8\cf0 
\par \pard \keep \plain\f6\fs18\cf0\b procedure \plain\f6\fs18\cf0 TForm1.PJVCLMsgDlg1Show(Sender: TObject; Dlg: TForm);
\par \plain\f6\fs18\cf0\b begin\plain\f6\fs18\cf0 
\par   Dlg.Color := clRed;
\par \plain\f6\fs18\cf0\b end\plain\f6\fs18\cf0 ;\plain\f1\fs18\cf0 
\par \pard \plain\f1\fs12\cf0 
\par \plain\f1\fs18\cf0\b Example 2 - Adding a check box to the form\plain\f1\fs18\cf0 
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 We often see dialog boxes with check boxes at the bottom - they are often used to prevent the dialog from being shown again. We can do something similar using the OnShow and OnHide event handlers.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 Drop a TPJVCLMsgDlg component on a form and add the OnShow and OnHide event handlers. We use the OnShow event handler to add a check box to the bottom of the dialog, as the following code shows:
\par \plain\f1\fs8\cf0 
\par \pard \keep \plain\f6\fs18\cf0\b procedure\plain\f6\fs18\cf0  TForm1.PJVCLMsgDlg1Show(Sender: TObject; Dlg: TForm);
\par \plain\f6\fs18\cf0\b var\plain\f6\fs18\cf0 
\par   CB: TCheckBox;
\par \plain\f6\fs18\cf0\b begin\plain\f6\fs18\cf0 
\par   CB := TCheckBox.Create(Dlg);
\par   CB.Parent := Dlg;
\par   CB.Left := \plain\f6\fs18\cf3 10\plain\f6\fs18\cf0 ;
\par   Dlg.ClientHeight := Dlg.ClientHeight + CB.Height;
\par   CB.Top := Dlg.ClientHeight - CB.Height - \plain\f6\fs18\cf3 4\plain\f6\fs18\cf0 ;
\par   CB.Caption := \plain\f6\fs18\cf4 'Don''t show this dialog again'\plain\f6\fs18\cf0 ;
\par   CB.Checked := False;
\par   CB.Name := \plain\f6\fs18\cf4 'chkCustom'\plain\f6\fs18\cf0 ;
\par \plain\f6\fs18\cf0\b end\plain\f6\fs18\cf0 ;\plain\f1\fs18\cf0 
\par \pard \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 This code first creates a check box component owned and parented by the dialog box form. Because the check box is owned by the dialog form it will be freed automatically when the dialog is destroyed. Therefore we don't have to worry about freeing it. Next we set the location of the checkbox on the form. Notice how we increase the height of the dialog box and locate the check box at the bottom left. Next the check box's caption is set and we ensure it is unchecked. Finally we give the check box a name that we will use later.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 We now have the new checkbox set up, but how do we know how whether check box was checked before the dialog was closed. The OnHide event is used to do this as follows:
\par \plain\f1\fs8\cf0 
\par \pard \keep \plain\f6\fs18\cf0\b procedure\plain\f6\fs18\cf0  TForm1.PJVCLMsgDlg1Hide(Sender: TObject; Dlg: TForm);
\par \plain\f6\fs18\cf0\b var\plain\f6\fs18\cf0 
\par   CB: TCheckBox;
\par \plain\f6\fs18\cf0\b begin\plain\f6\fs18\cf0 
\par   CB := Dlg.FindComponent(\plain\f6\fs18\cf4 'chkCustom'\plain\f6\fs18\cf0 ) \plain\f6\fs18\cf0\b as\plain\f6\fs18\cf0  TCheckBox;
\par   \plain\f6\fs18\cf0\b if not\plain\f6\fs18\cf0  Assigned(CB) \plain\f6\fs18\cf0\b then\plain\f6\fs18\cf0 
\par     \plain\f6\fs18\cf0\b raise\plain\f6\fs18\cf0  Exception.Create(\plain\f6\fs18\cf4 'No check box found'\plain\f6\fs18\cf0 );
\par   \plain\f6\fs18\cf0\b if\plain\f6\fs18\cf0  CB.Checked \plain\f6\fs18\cf0\b then\plain\f6\fs18\cf0 
\par     ShowMessage(\plain\f6\fs18\cf4 'Check box is CHECKED'\plain\f6\fs18\cf0 )
\par   \plain\f6\fs18\cf0\b else\plain\f6\fs18\cf0 
\par     ShowMessage(\plain\f6\fs18\cf4 'Check box is CLEAR'\plain\f6\fs18\cf0 );
\par \plain\f6\fs18\cf0\b end\plain\f6\fs18\cf0 ;
\par \pard \plain\f4\fs8\cf0 
\par \plain\f4\fs18\cf0 Here we find the check box component by name. An exception is raised if we don't find the check box. If it is found we display a message showing whether the check box was checked or not..
\par \plain\f4\fs8\cf0 
\par \plain\f4\fs18\cf0 Of course we could have stored a reference to the check box in a field in OnShow and referred to it in OnHide, but we need to be careful not to use the reference after the OnHide handler has returned because the component will have been destroyed.
\par \plain\f4\fs12\cf0 
\par \plain\f4\fs18\cf0\b Example 3 - Customising event handlers\plain\f4\fs18\cf0 
\par \plain\f4\fs8\cf0 
\par \plain\f4\fs18\cf0 You need to be careful when customising the event handlers of the dialog box form in the OnShow event. This is because TPJVCLMsgDlg uses some of the dialog form and button event handlers for its own purpose. Changing the handlers could prevent the component from working correctly. The following code shows the safe way of adding event handlers to the dialog form.
\par \plain\f4\fs8\cf0 
\par \plain\f4\fs18\cf0 Assume that the TPJVCLMsgDlg.OnShow evant handler is set as in example 3. We now want to check and un-check the check box in response to the user pressing Ctrl+F2. We must handle the dialog form's OnKeyDown event to trap the key press. To do this safely first add a field to TForm1 named fOldKeyDownEvent of type TMethod. Then modify the OnShow event handler by adding the following code to the end of the method:
\par \plain\f4\fs8\cf0 
\par \plain\f6\fs18\cf0\b procedure\plain\f6\fs18\cf0  TForm1.PJVCLMsgDlg1Show(Sender: TObject; Dlg: TForm);
\par \plain\f6\fs18\cf0\b var\plain\f6\fs18\cf0 
\par   ...
\par \plain\f6\fs18\cf0\b begin
\par   ...
\par \plain\f6\fs18\cf0   fOldKeyDownEvent := TMethod(Dlg.OnKeyDown);
\par   Dlg.OnKeyDown := CustomKeyDownHandler;
\par \plain\f6\fs18\cf0\b end\plain\f6\fs18\cf0 ;\plain\f4\fs18\cf0 
\par \plain\f4\fs8\cf0 
\par \plain\f4\fs18\cf0 This code stores the old OnKeyDown event (if any) in fOldKeyDownEvent then sets the dialog's OnKeyDown event handler to our replacement handler, which we define as below:
\par \plain\f4\fs8\cf0 
\par \pard \keep \plain\f6\fs18\cf0\b procedure\plain\f6\fs18\cf0  TDemoForm.CustomKeyDownHandler(Sender: TObject; \plain\f6\fs18\cf0\b var\plain\f6\fs18\cf0  Key: Word;
\par   Shift: TShiftState);
\par \plain\f6\fs18\cf0\b var\plain\f6\fs18\cf0 
\par   CB: TCheckBox;
\par   Dlg: TForm;
\par \plain\f6\fs18\cf0\b begin\plain\f6\fs18\cf0 
\par   \plain\f6\fs18\cf0\b if\plain\f6\fs18\cf0  Assigned(fOldKeyDownEvent.Code) \plain\f6\fs18\cf0\b then\plain\f6\fs18\cf0 
\par     TKeyEvent(fOldKeyDownEvent)(Sender, Key, Shift);
\par   \plain\f6\fs18\cf0\b if\plain\f6\fs18\cf0  (ssCtrl \plain\f6\fs18\cf0\b in\plain\f6\fs18\cf0  Shift) \plain\f6\fs18\cf0\b and\plain\f6\fs18\cf0  (Key = VK_F2) \plain\f6\fs18\cf0\b then\plain\f6\fs18\cf0 
\par   \plain\f6\fs18\cf0\b begin\plain\f6\fs18\cf0 
\par     Dlg := Sender \plain\f6\fs18\cf0\b as\plain\f6\fs18\cf0  TForm;
\par     CB := Dlg.FindComponent(\plain\f6\fs18\cf4 'chkCustom'\plain\f6\fs18\cf0 ) \plain\f6\fs18\cf0\b as\plain\f6\fs18\cf0  TCheckBox;
\par     \plain\f6\fs18\cf0\b if not\plain\f6\fs18\cf0  Assigned(CB) \plain\f6\fs18\cf0\b then\plain\f6\fs18\cf0 
\par       \plain\f6\fs18\cf0\b raise\plain\f6\fs18\cf0  Exception.Create(\plain\f6\fs18\cf4 'Can''t find check box'\plain\f6\fs18\cf0 );
\par     CB.Checked := \plain\f6\fs18\cf0\b not\plain\f6\fs18\cf0  CB.Checked;
\par   \plain\f6\fs18\cf0\b end\plain\f6\fs18\cf0 ;
\par \plain\f6\fs18\cf0\b end\plain\f6\fs18\cf0 ;\plain\f4\fs18\cf0 
\par \pard \plain\f4\fs8\cf0 
\par \plain\f4\fs18\cf0 Here we first check if there was a previous event handler (by examining the fOldKeyDownEvent's Code field) and call the event handler if present. Note we cast fOldKeyDownEvent to TKeyEvent to do this. That takes care of any previous event handling. Next we check for Ctrl+F2 and if found we get a reference to the check box as we did before (the dialog form is the Sender parameter here). Once we have the reference we toggle the state of the check box.
\par \plain\f4\fs8\cf0 
\par \plain\f4\fs18\cf0 If you are asking yourself if there is a OnKeyDown event handler in TPJVCLMsgDlg, the answer is yes! It handles the F1 key press and triggers help if there's a help button on the form. So if we'd have simply replaced the event handler we would have broken the component's help handling. It's always safer to assume there is a handler - the above code works fine if there isn't.
\par \page 
#{\footnote {#}IDH_EXTSTRPROPED}
${\footnote {$}Extended string property editor}
K{\footnote {K}extended string property editor}
@{\footnote {@}Description of mulit-line string property editor available separately.}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f1\fs22\cf2\b Extended String Property Editor\plain\f0\fs22\cf2\b 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 This property editor enables multi-line text to be entered into string and TCaption properties at design time. It is very useful when entered multiple lines into the dialog box's {\strike Text}{\v IDH_BASE_TEXT} property.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 The property editor can be downloaded from\plain\f1\fs18\cf2  {\strike DelphiDabbler.com}{\v *!ExecFile("http://www.delphidabbler.com/")}\plain\f1\fs18\cf0 .
\par \page 
}